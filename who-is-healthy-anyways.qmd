---
title: "Who is healthy anyway? Varying definitions of health in reference populations and the contribution of measurable social determinants to racial disparities in lung function"
format: 
  html:
    toc: true
  docx:
    toc: false
    reference-doc: custom-reference-doc.docx
  pdf:
    toc: false
editor: visual
crossref:
  custom:
    - kind: float
      key: suppfig
      reference-prefix: Figure S
      space-before-numbering: false
    - kind: float
      key: supptab
      reference-prefix: Table S
      space-before-numbering: false
author:
  - name: Amin Adibi
    corresponding: true
    orcid: 0000-0003-2748-4781
    email: amin.adibi@ubc.ca
    affiliations:
      - name: Respiratory Evaluation Sciences Program, Collaboration for Outcomes Research and Evaluation, Faculty of Pharmaceutical Sciences, University of British Columbia
  - name: Christopher Carlsten 
    affiliations:
      - name: Legacy for Airway Health, Vancouver Coastal Health Research Institute
      - name: Division of Respiratory Medicine, Faculty of Medicine, University of British Columbia
      - name: Air Pollution Exposure Lab, Vancouver Coastal Health Research Institute
  - name: Emily Brigham
    affiliations:
      - name: Legacy for Airway Health, Vancouver Coastal Health Research Institute
      - name: Division of Respiratory Medicine, Faculty of Medicine, University of British Columbia
  - name: Don D. Sin
    affiliations:
      - name: Centre for Heart Lung Innovation (HLI)
      - name: Division of Respiratory Medicine, Faculty of Medicine, University of British Columbia
  - name: Peter Loewen
    affiliations:
      - name: Collaboration for Outcomes Research and Evaluation, Faculty of Pharmaceutical Sciences, University of British Columbia
  - name: Mohsen Sadatsafavi
    affiliations:
      - name: Respiratory Evaluation Sciences Program, Collaboration for Outcomes Research and Evaluation, Faculty of Pharmaceutical Sciences, University of British Columbia
date: "`r Sys.Date()`"
bibliography: references.bib
csl: european-respiratory-journal.csl
execute:
  echo: false
---

## Abstract

**RATIONALE:** Racialized populations disproportionately experience exposures that impair lung function. Race-neutral reference equations are intended to mitigate bias due to disproportionate exposures at the cost of reduced precision. We hypothesized that the disproportionate impact of social determinants of health (SDoH) captured in survey data could help explain a larger proportion of racial gaps in lung function than previously reported.

**METHODS:** We defined a series of nested reference populations using data from NHANES 2007-2012 participants. Starting with non-smokers without respiratory symptoms or diagnoses, we sequentially excluded those with confirmed occupational exposure to dust/fumes, physical inactivity, maternal tobacco use, obesity, no home ownership, no insurance, lower education, and self-reported unhealthy diet. Across successive populations, we compared average age-, sex-, and height-adjusted differences in FEV~1~ and FVC between minority race and ethnicity groups and White participants, separately for adults (≥20) and youths (\<20).

**RESULTS:** In successively healthier populations, the proportion of participants declined for non-Hispanic Black, Mexican American, and Other Hispanic populations but remained close to the reference population for Asian and other/multiracial participants. After excluding individuals with unfavorable SDoH, the gap between non-Hispanic Black and White Americans in FEV~1~ and FVC reduced by 25% and 26% in youths and 26% and 19% in adults. The gap between Asian and White Americans reduced by 7% and 13% among youths but increased by 14% and 11% among adults. At baseline, Mexican Americans had slightly higher adjusted FEV~1~ and FVC than non-Hispanic White Americans, and excluding those with unfavorable SDoH increased this gap.

**CONCLUSIONS:** The SDoH investigated herein disproportionately affected Black, Mexican American, and Other Hispanic populations, and explained a higher proportion of racial disparities in lung function than previously reported.

------------------------------------------------------------------------

## Background

Racial disparities in lung function measurements have been documented since the late 18^th^ century. Initially, pro-slavery scientists in the US weaponized differences in lung function to justify White supremacy [@braun2023]. Over time, this overtly racist misuse was replaced with the notion that racial differences in lung function were innate but benign, often attributed to anthropometric variations [@Agrawal2019]. In the 20th century and with the growing adoption of pre-employment spirometry as a test of fitness for certain workers, occupation standards in the US proposed race-based adjustment of spirometry results to prevent hiring discrimination against Black individuals [@townsend2022]. Subsequently, in 2005, the American Thoracic Society (ATS) and the European Respiratory Society (ERS) recommended race-specific reference equations for interpreting pulmonary function tests in clinical settings [@pellegrino2005].

In the past two decades, race-based lung function reference values have been widely used to guide diagnosis, assessment, and management of lung diseases, determine priority for lung transplantation, evaluate fitness for employment, and assess occupational health and insurance claims. However, there is increasing awareness of how these practices may perpetuate racial bias and exacerbate health disparities, especially considering the disproportionate environmental exposures faced by racialized populations [@vyas2020]. Emerging literature indicates that Black individuals in the US may experience harmful environmental exposures that adversely affect lung growth and function [@marciniuk2023]. Race-based normalization of lung function may overlook these issues, potentially leading to the underdiagnosis and inadequate treatment of respiratory diseases in underserved communities.

Spirometry reference equations are developed with data from "healthy" volunteers, who do not smoke, are asymptomatic, and have not been diagnosed with lung diseases [@quanjer2012; @bowerman2023]. This broad definition could introduce bias, as the reference populations may reflect systemic differences in lung function across racial groups not necessarily because of biological factors but rather due to unequal environmental or social conditions.

The effects of social determinants of health (SDoH) on lung function have been recognized for decades. The 1991 ATS statement on interpreting lung function testing acknowledged environmental factors, smoking, air pollution, occupational exposures, built environment and socio-economic factors as the main sources of between-individual variability in lung function [@lungfun1991]. The statement also mentioned racial differences that persist after adjusting for age, height, smoking, air pollution, and altitude, and hypothesized that these differences may in part be due to body measurements, environmental differences, nutrition, physical activity, and socioeconomic factors [@lungfun1991]. A 1986 review of between-individual variation in forced vital capacity (FVC) attributed up to 30% of variation to biological sex, up to 30% to age, height, and weight, 10% to race, 3% to measurement error, and 27% to unexplained factors [@becklake1986]. Our study focuses on what proportion of variability that was historically attributed to race can be explained by SDoH.

Our study aims to determine if a more comprehensive set of SDoH in more recent cycles of the US National Health and Nutrition Examination Survey (NHANES) can explain a larger proportion of lung function disparities. By considering varied definitions of "healthy" in reference populations, we assess the impact of SDoH on racial lung function disparities across different self-identified racial and ethnic groups. We have presented a preliminary version of these results at the 2024 European Respiratory Congress in Vienna [@adibi2024].

## Methods

We used data from three cycles of NHANES (2007-2012) with appropriate 6-year sampling weights to account for complex survey design. We included individuals with baseline spirometry that either met or exceeded ATS collection standards. We carefully reviewed the NHANES variable list and selected SDoH-related variables that could affect lung function. We defined SDoH broadly to include employment and working conditions, income and social status, education, environmental exposures, healthy behaviors, stress, access to healthcare, diet, and housing. We defined 10 increasingly healthier reference populations. Starting from the base reference population of non-smokers with no diagnoses of lung diseases or respiratory symptoms, we sequentially excluded those with confirmed occupational exposures, physical inactivity, maternal smoking, obesity (defined as body-mass-index≥30), no home ownership, no insurance, lower education, and self-reported unhealthy diet.

Occupational exposure was defined as exposure to either mineral dust, organic dust, exhaust fumes, or other fumes at work. Individuals who did not have at least 10 minutes of vigorous or moderate activity in a typical week, either for work or recreationally, were considered physically inactive. Lower educated individuals were defined as adults 20 years of age and older with a high school or a GED degree or lower, and 6-19 years old who were neither in school nor on vacation from school. Individuals who self-reported their dietary health as either poor or fair were considered to have an unhealthy diet. Poverty was measured as the ratio of income to federal poverty levels. We calculated allostatic load score based on twelve commonly used biomarkers, using the method proposed by Liu et al [@liu2021]. Biomarkers included were C-reactive protein, white blood cell count, glycohemoglobin, serum albumin, serum creatinine, total cholesterol, high density lipoprotein (HDL), serum triglycerides, BMI, resting systolic blood pressure, resting diastolic blood pressure measurements, and pulse rate. For each of the twelve biomarkers, the participant received a score of 1 if their value was deemed high-risk (i.e., below 25% percentile for HDL and serum albumin and above 75% percentile for other biomarkers) and 0 if low risk. Possible values for allostatic load score ranged from 0 to 12.

For each reference population, the racial gap was calculated as the average difference in forced expiratory volume in one second (FEV~1~) and forced vital capacity (FVC) between minority and majority populations adjusted by age, height, and sex in a linear regression model. We evaluated the reduction in the racial gap separately for youth (\<20 yrs) and adults (≥20 yrs). The distinction between adults and youth was dictated by how NHANES data are collected; for example, the educational level variable is only available for those 20 years of age and older and school attendance is more applicable to children and youth. We repeated the main analysis separately for individuals who self-identified with different minority groups, including Non-Hispanic Black, Asian (only available in NHANES 2011-2012), Mexican American, Other Hispanic, and Other/Multiracial.

In sensitivity analyses, we evaluated results separately for males and females and those born inside the US. We also evaluated the proportion of the racial gap in lung function between Black and White participants that can be explained by poverty or allostatic load. To examine the effects of our choice of SDoH variables, we conducted a leave-one-out analysis, where we reproduced the results 9 times, each time leaving one of the SDoH out of the successively defined reference populations.

All data preparation and analysis was performed in R v4.4.2 using reproducible Quarto documents. A fully reproducible analysis code is publicly available at <https://github.com/aminadibi/who-is-healthy-anyways/>. This study was exempt from the Research Ethics Board at the University of British Columbia related to the use of publicly available data for research and publication.

```{r, warning=FALSE, message=FALSE}
rm(list = ls(all.names = TRUE))
library(tidyverse)
library(purrr)
library(naniar)
library(tidymodels)
library(ggthemes)
library(patchwork)
library(hrbrthemes)
library(table1)
library(rspiro)
library(stringr)

compute_gap_reduction <- function(df, measure, type) {
  
    if (type=="perc") {
    df %>% 
      filter(Measure == measure) %>%
      summarise(Reduction = 100*(last(estimate) - first(estimate)) / first(estimate)) %>% 
      round(2) } else if (type=="abs"){
        df %>% 
        filter(Measure == measure) %>%
        summarise(Reduction = -1*(last(estimate) - first(estimate)) %>% round(3)) 
      } else if (type=="baseline") {
        df %>% 
        filter(Measure == measure) %>%
        summarise(Reduction = -1*(first(estimate)) %>% round(3)) 
      
    } else
    {stop("Invalid type for compute_gap_reduction")}
  
}

createCohort <- function (ageGroup, incomePovertyRatioOnly=FALSE, sex='all', BirthCountry='all', homeOwnershipOnly=FALSE, includedRace=c(3,4), AllostaticLoadOnly=FALSE) {
  if (!(ageGroup %in% c("adult", "youth", "all_ages"))) 
    stop("Invalid age group")
  if (!(BirthCountry %in% c("all", "US", "Other countries"))) 
    stop("Invalid BirthCountry")
  if (!(sex %in% c("all", "male", "female"))) 
    stop("Invalid sex")
  

  nhanes <- readRDS("nhanes_2007_2012.rds") 
  
  if (AllostaticLoadOnly) {
    
  #   wt_percent_rank <- function(x, 
  #                             weights=rep(1, length(x)), 
  #                             q = (0:1000) / 1000){
  #   # fastest method to calculate breaks
  #   breaks <- reldist::wtd.quantile(x, weight = weights, q = q, na.rm = TRUE)
  #   # problem sometimes with ties in the breaks. This forces a way through:
  #   breaks <- unique(breaks)
  #   breaks[1] <- -Inf
  #   # cut the data where the quantile breaks are:
  #   y <- cut(x, breaks = breaks, labels = FALSE) # labels = FALSE for speed
  #   
  #   # convert this into a number from 0 to 1
  #   y <- as.numeric(y) - 1
  #   y <- y / max(y)
  # return(y)
  # }

    
nhanes <- nhanes %>%
mutate(
 mean_bp_sys=mean(c(bp_sys_1, bp_sys_2, bp_sys_3, bp_sys_4), na.rm = TRUE), 
 mean_bp_dias=mean(c(bp_dias_1, bp_dias_2, bp_dias_3, bp_dias_4), na.rm = TRUE), 
 als_crp                    = as.numeric((percent_rank(crp)                    >=0.75)),
 als_wbc                    = as.numeric((percent_rank(wbc)                    >=0.75)),
 als_glycohemoglobin        = as.numeric((percent_rank(glycohemoglobin)        >=0.75)),
 als_albumin_ug_ml          = as.numeric((percent_rank(albumin_ug_ml)          <=0.25)),
 als_creatinin_mg_dl        = as.numeric((percent_rank(creatinin_mg_dl)        >=0.75)),
 als_total_cholesterol_mg_dl= as.numeric((percent_rank(total_cholesterol_mg_dl)>=0.75)),
 als_hdl_mg_dl              = as.numeric((percent_rank(hdl_mg_dl)              <=0.25)),
 als_trigly_mg_dl           = as.numeric((percent_rank(trigly_mg_dl)           >=0.75)),
 als_bmi                    = as.numeric((percent_rank(bmi)                    >=0.75)),
 als_mean_bp_sys            = as.numeric((percent_rank(mean_bp_sys)            >=0.75)),
   als_mean_bp_dias         = as.numeric((percent_rank(mean_bp_dias)           >=0.75)),
   als_pulse_60_sec         = as.numeric((percent_rank(pulse_60_sec)           >=0.75)),
  ) %>%
  mutate(als_score = rowSums(dplyr::select(., als_crp, als_wbc, als_glycohemoglobin, als_albumin_ug_ml,
                                           als_creatinin_mg_dl, als_total_cholesterol_mg_dl, als_hdl_mg_dl, als_trigly_mg_dl,
                                           als_bmi, als_mean_bp_sys, als_mean_bp_dias, als_pulse_60_sec
                                           ), na.rm = TRUE))

  }
  
  
  stopifnot((nhanes %>% count()) == 30442) # Ensure we have the correct n
  stopifnot((nhanes %>% filter(race %in% c(3,4)) %>% count()) == 18359) 
  stopifnot((nhanes %>% drop_na(fev1_pre, fvc_pre)  %>% count()) == 20050) 
  
  if (sex=='female') {
    warning('only females are included.')
    nhanes <- nhanes %>% filter(sex==2)
  }
  
  if (sex=='male') {
    warning('only males are included.')
    nhanes <- nhanes %>% filter(sex==1)
  }

  nhanes <- nhanes %>%
    mutate(fev1 = fev1_pre,
           fvc  = fvc_pre) %>%
    drop_na(fev1, fvc) %>%
    filter(spiro_status_pre == 1) %>%
    filter(fev1_quality_pre == "A" | fev1_quality_pre == "B") %>%
    filter(fvc_quality_pre  == "A" | fvc_quality_pre  == "B")
    # mutate(race_text_nhanes = str_remove(race_text_nhanes, "Non-Hispanic "))
  
  message(paste0("NHANES N (excluding missing or low quality spiro: ", 
                 (nhanes %>% count())))
  
  if (BirthCountry=='all'){
      nhanes_bw <- nhanes %>%
        filter(race %in% includedRace) %>%
        mutate(race=factor(race, levels=includedRace))
  } else  {
          nhanes_bw <- nhanes %>%
            filter(race %in% includedRace) %>%
            filter(birth_country==BirthCountry) %>%
            mutate(race=factor(race, levels=includedRace))

  } 

  message(paste0("NHANES included races N (excluding missing or low quality spiro: ", 
                 (nhanes_bw %>% count())))
  
if (ageGroup=="adult") {
nhanes_bw <- nhanes_bw %>%
  filter(age>=20)

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}
  
if (ageGroup=="youth") {
nhanes_bw <- nhanes_bw %>%
  filter(age<20)

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}
  
if (ageGroup=="all_ages") {

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}
 
#vis_miss(nhanes_bw, warn_large_data = F)

ref0 <- nhanes_bw %>%
   mutate(
        # race_spiro_gli2012            = case_match(race_text_nhanes,
        #                              "Non-Hispanic White" ~ "1"  ,
        #                              "Non-Hispanic Black" ~ "2" ,
        #                              "Non-Hispanic Asian" ~ "4", 
        #                              "Mexican American" ~ "1", 
        #                              "Other Hispanic" ~ "1",
        #                              "Other Race - Including Multi-Racial" ~ "5"
        #                              ),
        sex_text           = case_match(sex,
                                     "1" ~ "Male"  ,
                                     "2" ~ "Female" ),
        # predicted_fev1_gli2012 = rspiro::pred_GLI(age=age, height=height/100, 
        #                                           gender=sex, ethnicity=race_spiro_gli2012,
        #                                           param="FEV1"),
        # predicted_fev1_gli_global = rspiro::pred_GLIgl(age=age, height=height/100, 
        #                                           gender=sex, 
        #                                           param="FEV1"),
        # perc_pred_fev1_gli2012 = rspiro::pctpred_GLI(age=age, height=height/100, 
        #                                           gender=sex, ethnicity=race_spiro_gli2012,
        #                                           FEV1=fev1),
        # zscore_fev1_gli2012 = rspiro::zscore_GLI(age=age, height=height/100, 
        #                                           gender=sex, ethnicity=race_spiro_gli2012,
        #                                           FEV1=fev1),
        # perc_pred_fev1_gli2012_whiteforall = rspiro::pctpred_GLI(age=age, height=height/100, 
        #                                           gender=sex, ethnicity=1,
        #                                           FEV1=fev1),
        # perc_pred_fev1_gli2012_otherforall = rspiro::pctpred_GLI(age=age, height=height/100, 
        #                                           gender=sex, ethnicity=5,
        #                                           FEV1=fev1),
        # perc_pred_fev1_gli_global = rspiro::pctpred_GLIgl(age=age, height=height/100, 
        #                                           gender=sex,
        #                                           FEV1=fev1),
        # zscore_fev1_gli_global = rspiro::zscore_GLIgl(age=age, height=height/100, 
        #                                           gender=sex,
        #                                           FEV1=fev1)
      
        ) 
  

ref0 %>%
  group_by(race) %>%
  count()

ref1 <- ref0 %>%
  filter ((is.na(current_smoke) | (current_smoke == "3")) &
         (is.na(ever_100_smoke) | (ever_100_smoke != "1")) &
         (is.na(last_5_days_cigarettes) |  (last_5_days_cigarettes != "1")) &
         (is.na(last_5_days_pipes) | (last_5_days_pipes != "1")) &
         (is.na(last_5_days_cigars) | (last_5_days_cigars != "1")) &
         (is.na(ever_asthma) | (ever_asthma !="1")) &
         (is.na(ever_bronchitis) | (ever_bronchitis != "1")) &
         (is.na(ever_emphysema) | (ever_emphysema != "1")) &
         (is.na(cough_3_month) | (cough_3_month!=1)) & 
         (is.na(phlegm_3_month) | (phlegm_3_month!=1)) & 
         (is.na(wheezing_past_yr) | (wheezing_past_yr!=1)) & 
         (is.na(dry_cough_night_past_yr) | (dry_cough_night_past_yr!=1))) %>%
  mutate(ref="reference")

if (incomePovertyRatioOnly) {
  ref2 <- ref1 %>% filter(is.na(income_poverty_ratio) | (income_poverty_ratio>=1)) %>%
  mutate(ref="income_poverty_ratio>=1")
  ref3 <- ref2 %>% filter(is.na(income_poverty_ratio) | (income_poverty_ratio>=1.5)) %>%
  mutate(ref="income_poverty_ratio>=1.5")
  ref4 <- ref3 %>% filter(is.na(income_poverty_ratio) | (income_poverty_ratio>=2)) %>%
  mutate(ref="income_poverty_ratio>=2")
  ref5 <- ref4 %>% filter(is.na(income_poverty_ratio) | (income_poverty_ratio>=2.5))  %>%
  mutate(ref="income_poverty_ratio>=2.5")
  ref6 <- ref5 %>% filter(is.na(income_poverty_ratio) | (income_poverty_ratio>=3)) %>%
  mutate(ref="income_poverty_ratio>=3")
  ref7 <- ref6 %>% filter(is.na(income_poverty_ratio) | (income_poverty_ratio>=3.5))  %>%
  mutate(ref="income_poverty_ratio>=3.5")
  ref8 <- ref7 %>% filter(is.na(income_poverty_ratio) | (income_poverty_ratio>=4))  %>%
  mutate(ref="income_poverty_ratio>=4")
  ref9 <- ref8 %>% filter(is.na(income_poverty_ratio) | (income_poverty_ratio>=4.5))  %>%
  mutate(ref="income_poverty_ratio>=4.5")
  ref10<- ref9 %>% filter(is.na(income_poverty_ratio) | (income_poverty_ratio>=5))  %>%
  mutate(ref="income_poverty_ratio>=5")
  refs <- list(ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10)

}


if (AllostaticLoadOnly) {
  ref2 <- ref1 %>% filter(is.na(als_score) | (als_score<=8)) %>%
  mutate(ref="als_score<=8")
  ref3 <- ref2 %>% filter(is.na(als_score) | (als_score<=7)) %>%
  mutate(ref="als_score<=7")
  ref4 <- ref3 %>% filter(is.na(als_score) | (als_score<=6)) %>%
  mutate(ref="als_score<=6")
  ref5 <- ref4 %>% filter(is.na(als_score) | (als_score<=5))  %>%
  mutate(ref="als_score<=5")
  ref6 <- ref5 %>% filter(is.na(als_score) | (als_score<=4)) %>%
  mutate(ref="als_score<=4")
  ref7 <- ref6 %>% filter(is.na(als_score) | (als_score<=3))  %>%
  mutate(ref="als_score<=3")
  ref8 <- ref7 %>% filter(is.na(als_score) | (als_score<=2))  %>%
  mutate(ref="als_score<=2")
  ref9 <- ref8 %>% filter(is.na(als_score) | (als_score<=1))  %>%
  mutate(ref="als_score<=1")
  ref10<- ref9 %>% filter(is.na(als_score) | (als_score<=0))  %>%
  mutate(ref="als_score<=0")
  refs <- list(ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10)

}


if (homeOwnershipOnly) {
  ref2 <- ref1 %>% 
    filter(is.na(home_ownership) | (home_ownership==1)) %>%
  mutate(ref="home owner")
  refs <- list(ref1, ref2)

}


if (!incomePovertyRatioOnly & !homeOwnershipOnly & !AllostaticLoadOnly) {
ref2 <- ref1 %>%
    filter((is.na(mineral_dusts) | (mineral_dusts!=1)) & 
         (is.na(organic_dusts)   | (organic_dusts!=1)) & 
         (is.na(exhaust_fumes)   | (exhaust_fumes!=1)) & 
         (is.na(other_fumes)     | (other_fumes!=1))) %>%
  mutate(ref="job unexposed")
  
  
ref3 <- ref2 %>%
      filter((is.na(vigorous_work) | (vigorous_work==1)) | 
         (is.na(vigorous_recreational)   | (vigorous_recreational==1)) | 
         (is.na(moderate_work)   | (moderate_work==1)) | 
         (is.na(moderate_recreational)   | (moderate_recreational==1)))  %>%
  mutate(ref="physically active")

ref4 <- ref3 %>%
      filter((is.na(maternal_smoke) | (maternal_smoke!=1))) %>% #TODO Maternal smoke not available for those over 15 years
  mutate(ref="no maternal smoke")
  
ref5 <- ref4 %>%  
      filter((is.na(smoker_in_household) | (smoker_in_household != "1"))) %>%
      mutate(ref="no 2ndhand smoke")

ref6 <- ref5 %>%
      filter((is.na(bmi) | (bmi<=30))) %>%
  mutate(ref="not obese")

ref7 <- ref6 %>%
    filter(is.na(home_ownership) | (home_ownership==1))  %>%
  mutate(ref="homeowner")

ref8 <- ref7 %>%
     filter((is.na(has_insurance) | 
               (has_insurance==1)))  %>%
  mutate(ref="insured")

if (ageGroup=="adult") {
  ref9 <- ref8 %>%
    filter(is.na(education_adults) | (education_adults %in% c(4,5)))  %>%
  mutate(ref="educated")
}

if (ageGroup=="youth") {
  ref9 <- ref8 %>%
    filter(is.na(now_attending_school) | (now_attending_school != 3)| (age<6))  %>%
  mutate(ref="educated")
}

ref10 <- ref9 %>%
     filter((is.na(healthy_diet) | 
               (healthy_diet==1) | 
               (healthy_diet==2) | 
               (healthy_diet==3)))  %>%
  mutate(ref="healthy diet")


  ref11 <- ref10 %>%
     filter((is.na(lang_home_hispanic) | 
               (lang_home_hispanic==4) | 
               (lang_home_hispanic==5)))  %>%
     filter((is.na(lang_home_asian) | 
               (lang_home_asian==4) | 
               (lang_home_asian==5)))  %>%
     filter((is.na(lang_home_en_bw) | 
               (lang_home_en_bw==1)))  %>%
  mutate(ref="English at home")
  

}


refs <- list(ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10)


return(refs)
}
 # Note that maternal smoke variable is only available for youth up to 15 years old.

```

## Results

#### Participants

Of the 30,442 participants in NHANES 2007-2012, we included 17,032 participants who had high-quality spirometry. Excluding smokers and individuals with respiratory diagnoses or symptoms led to 8,802 participants, including 4,832 adults and 3,970 youths (@fig-flowchart). Participant flow across successive reference populations is provided in the appendix (@suppfig-flowrefs). Characteristics of participants are summarized in @tbl-table1.

```{r}

race_estimate <- function(df, outcome, single_sex=FALSE) {
  if (single_sex) {formula_text <- as.formula(paste0(outcome, " ~ age + height + race"))}
  else {formula_text <- as.formula(paste0(outcome, " ~ sex + age + height + race"))}
  lm_fit <- lm(formula_text, data=df, weights=MEC6YR)
  res <- (tidy(lm_fit, conf.int=TRUE) %>% filter(str_detect(term, "race")))
            
#filter(term==paste0('race', includedRace[includedRace!=3]))) 
  return(res)
}

plot_racial_gap_change <- function(refs_adult_list, refs_youth_list, single_sex = FALSE, 
                                   metric1="fev1", metric2="fvc", includedRace=c(3,4)){
  
  sequence_adult <- lapply(refs_adult_list, function(x) unique(x$ref))
  sequence_adult_df <- do.call(rbind.data.frame, sequence_adult)
  names(sequence_adult_df) <- 'ref'
  sequence_adult_df$ref <- factor(sequence_adult_df$ref, levels=sequence_adult_df$ref)
  
  sequence_youth <- lapply(refs_youth_list, function(x) unique(x$ref))
  sequence_youth_df <- do.call(rbind.data.frame, sequence_youth)
  names(sequence_youth_df) <- 'ref'
  sequence_youth_df$ref <- factor(sequence_youth_df$ref, levels=sequence_youth_df$ref)
  
  race_coeffs_fev1_adult <- 
    map_df(refs_adult_list, function(x) race_estimate(x, metric1, single_sex = single_sex)) %>% 
    mutate(sequence=sequence_adult_df$ref,
           Measure = metric1) 
  
  race_coeffs_fev1_youth <-
    map_df(refs_youth_list, function(x) race_estimate(x, metric1, single_sex = single_sex)) %>%
    mutate(sequence=sequence_youth_df$ref,
           Measure = metric1) 
  
  race_coeffs_fvc_adult <- 
    map_df(refs_adult_list, function(x) race_estimate(x, metric2, single_sex = single_sex)) %>%
    mutate(sequence=sequence_adult_df$ref,
           Measure = metric2)
  
  race_coeffs_fvc_youth <- 
    map_df(refs_youth_list, function(x) race_estimate(x, metric2, single_sex = single_sex)) %>% 
    mutate(sequence=sequence_youth_df$ref,
           Measure = metric2)
  
  race_coeffs_adult <- rbind(race_coeffs_fev1_adult, race_coeffs_fvc_adult)
  race_coeffs_youth <- rbind(race_coeffs_fev1_youth, race_coeffs_fvc_youth)
  
  # report Gap Reduction
  gap_reduction_messages <- function(race_coeffs, age_group) {
    measures <- c(metric1, metric2)
    for (measure in measures) {
      message(paste0("For ", measure, " in ", age_group, 
                     ", the baseline gap was ", 
                     compute_gap_reduction(race_coeffs, measure, type="baseline"), " mL"))
      message(paste0("For ", measure, " in ", age_group, 
                     ", the absolute change in gap was ", 
                     compute_gap_reduction(race_coeffs, measure, type="abs"), " mL"))
      message(paste0("For ", measure, " in ", age_group, 
                     ", the percentage change in gap was ", 
                     compute_gap_reduction(race_coeffs, measure, type="perc"), "%"))

    }
  }

  # youth_print <- race_coeffs_youth %>% 
  #   filter(sequence=="reference" | sequence=="healthy diet") %>%
  #   select(-statistic, -`std.error`) %>%
  #   mutate(estimate=round(estimate, 2))
  # 
  # adult_print <- race_coeffs_adult %>% 
  #   filter(sequence=="reference" | sequence=="healthy diet") %>%
  #   select(-statistic, -`std.error`) %>%
  #   mutate(estimate=round(estimate, 2))
  # 
  # message("Youth:")
  # print(youth_print)
  # message("Adults:")
  # print(adult_print)
  
  gap_reduction_messages(race_coeffs_adult, "adults")
  gap_reduction_messages(race_coeffs_youth, "youth")
  
  # Plot Racial Gap
  plot_racial_gap <- function(race_coeffs, age_group, measure, suppress_legend=FALSE) {
    
    base_high <- -1* (race_coeffs %>% filter(sequence=="reference" & Measure==measure))$conf.low
    base_low <- -1* (race_coeffs %>% filter(sequence=="reference" & Measure==measure))$conf.high
    base_ref <- -1* (race_coeffs %>% filter(sequence=="reference" & Measure==measure))$estimate
    ylim_low <- min(-1*(race_coeffs$conf.high)) #reversed because of the negative sign
    ylim_high <- max(-1*(race_coeffs$conf.low))

    p <- ggplot(race_coeffs%>%filter(Measure==measure), aes(y=-estimate, x=sequence)) + 
      geom_point(size=0.7) +
      geom_errorbar(aes(ymin=-conf.low, ymax=-conf.high), width=0.2, alpha=0.8) +
      geom_hline(yintercept = base_low, colour="salmon", linetype='dashed') +
      geom_hline(yintercept = base_high, colour="salmon", linetype='dashed') +
      geom_hline(yintercept = base_ref, colour="salmon", linetype='dotted') +
      ylim(ylim_low-0.1, ylim_high+0.1) + 
      ylab(paste0(str_to_upper(measure), " Gap (mL)")) +
      xlab("") +
      theme_few() + theme(axis.text.x = element_text(angle = 90, size=7, hjust=0.95,vjust=0.2))
    
    if (suppress_legend) {
      p <- p +  theme(legend.position="none")
    }
    return(p)
  }
  
  racial_gap_fev1_adult <- plot_racial_gap(race_coeffs_adult, "adults", measure="fev1") + ggtitle('Adults')
  racial_gap_fvc_adult  <- plot_racial_gap(race_coeffs_adult, "adults", measure="fvc")

  racial_gap_fev1_youth <- plot_racial_gap(race_coeffs_youth, "youth",  measure="fev1") +  ggtitle('Youth')
  racial_gap_fvc_youth <- plot_racial_gap(race_coeffs_youth, "youth",  measure="fvc")

 
    
     p <- racial_gap_fev1_youth + racial_gap_fev1_adult + racial_gap_fvc_youth + racial_gap_fvc_adult +  
       plot_layout(ncol = 2) +
       plot_layout(axes="collect")  + plot_annotation(tag_levels = 'A') 
  
  return(p)
}


predPlot <- function(df) {
  lm_fit_with_race <- lm(fev1 ~ sex + age + height + race, data=df)
  df <- df %>%
    mutate(.pred = predict(lm_fit_with_race, df))
  
  ggplot(df) +
    geom_point(aes(y=fev1, x=age), size=0.1, alpha=0.4, colour='salmon') + 
    geom_smooth(aes(y=fev1, x=age), colour='salmon') +
    geom_point(aes(y=.pred, x=age), size=0.1, alpha=0.4) +
    geom_smooth(aes(y=.pred, x=age)) +
    facet_wrap(~sex) + 
    theme_few()
  
}

```

#### Disproportionate Impact of Exposures

From the base reference population to the most restrictive, the number of included participants decreased from 8,802 to 1,921. The proportion of participants decreased from 13% to 7% for Black youths, from 11% to 4% for Black adults, from 15% to 10% for Mexican American youths, from 10% to 3% for Mexican American adults, from 7% to 5% for Other Hispanic youths, and from 6% to 3% for Other Hispanic adults (@fig-racialgap). The reduction in the proportion of participants after excluding those with unfavorable SDoH confirms the disproportionate impact of these factors on Black, Mexican American, and Other Hispanic populations in the US. The proportion of participants remained within 1% of the reference population for participants who identified as Asian or Other/Multiracial.

#### Non-Hispanic Black Americans

In the baseline reference population, average FEV~1~ and FVC were 350.5 mL and 418.4 mL higher in White youths compared with Black youths, after adjusting for age, height, and biological sex at birth. For adults, the adjusted racial gap was 502.6 mL for FEV~1~ and 686.5 mL for FVC. After excluding those with unfavorable SDoH, the racial gap in FEV~1~ and FVC was reduced by 86.9 mL (24.8%) and 109.6 mL (26.2%) in youths and 132.2 mL (26.3%) and 132.9 mL (19.4%) in adults, respectively (@fig-racialgap).

#### Mexican Americans

Average FEV~1~ and FVC were 56.3 mL and 34.7 mL higher in Mexican American youths compared to White youths, after adjusting for age, height, and biological sex at birth. Mexican American and White adults had similar adjusted FEV~1~ and FVC at baseline, with differences smaller than 6 mL (@suppfig-Mexican). Excluding individuals with unfavorable SDoH resulted in higher FEV~1~ and FVC values for the Mexican American population compared to the White population. Adjusted average FEV~1~ and FVC values for Mexican American youths increased by 38.0 mL (67.5%) and 28.2 mL (81.3%) higher than White youths. For adults, average FEV~1~ and FVC increased by 33.8 mL and 35.6 mL compared to White adults (@suppfig-Mexican).

#### Other Hispanic Americans

In the baseline reference population, average FEV~1~ and FVC were 65.9 mL and 99.1 mL higher in White youths compared with Other Hispanic youths youths, after adjusting for age, height, and biological sex at birth. For adults, the adjusted racial gap was 67.8 mL for FEV~1~ and 117.3 mL for FVC. After excluding those with unfavorable SDoH, the racial gap in FEV~1~ and FVC was reduced by 10.0 mL (15.2%) and 19.2 mL (19.3%) in youths and 58.2 mL (85.9%) and 14.5 mL (12.4%) in adults, respectively (@suppfig-hispanic) .

#### Asian Americans

In the baseline reference population, average FEV~1~ and FVC were 183.8 mL and 307.2 mL higher in White youths compared with Asian youths, after adjusting for age, height, and biological sex at birth. For adults, the adjusted racial gap was 367.5 mL for FEV~1~ and 500.1 mL for FVC. After excluding those with unfavorable SDoH, the racial gap in FEV~1~ and FVC was reduced by 12.1 mL (6.6%) and 38.5 mL (12.5%) in youths but increased by 51.8 mL (14.1%) and 55.6 mL (11.1%) in adults (@suppfig-Asian).

The appendix includes additional results for Other/Multiracial (@suppfig-Other).

### Secondary and Sensitivity Analyses

We conducted additional analyses to further evaluate racial gaps in lung function between Non-Hispanic Black and White Americans.

#### Biological Sex

In females, excluding those with unfavorable SDoH reduced the racial gap in FEV~1~ and FVC by 51.6 mL (16.1%) and 66.1 mL (18.6%) in youths, and 113.6 mL (26.8%) and 122.2 mL (19.8%) in adults, respectively (@suppfig-females). In males, excluding those with unfavorable SDoH reduced the racial gap in FEV~1~ and FVC by 137.3 mL (34.6%) and 171.3 mL (33.8%) in youths, and 89.4 mL (14.5%) and 71.0 mL (8.2%) in adults (@suppfig-males).

#### Country of Birth

After excluding those with unfavorable SDoH, the racial gap in FEV~1~ and FVC was reduced by 82.2 mL (24.1)% and 101.1 mL (24.8%) in US-born youths, and 171.3 mL (35.4%) and 152.9 mL (22.9%) in US-born adults (@suppfig-usborn). Individuals born outside of the US had higher FEV~1~ and FVC, were less exposed to second-hand and maternal smoking, and reported healthier diets, but had more occupational exposures (@supptab-fig1byusborn). Non-US-born Black individuals had higher income and were more likely to be covered by health insurance than US-born Black individuals while US-born White participants had higher income and higher insurance coverage that non-US-born White participants (@supptab-fig1byusborn).

#### Allostatic Load

The allostatic load score ranged from 0 to 8 among self-identified Non-Hispanic Black and White participants. Excluding participants who had an allostatic load score of 1 or higher reduced the racial gap in FEV~1~ and FVC by 37.5 mL (10.7%) and 34.6 mL (8.3%) in youths and by 105.0 mL (20.9%) and 100.2 mL (14.6%) in adults.

#### Poverty

Among self-identified Black and White participants, excluding those with income to poverty ratio under five reduced the racial gap in FEV~1~ and FVC by 13.0 mL (3.7%) and 10.4 mL (2.5%) in youths, and 28.2 mL (5.6%) and 2 mL (0.3%) in adults (@suppfig-incomepovertyratio).

#### Leave-one-out

In the leave-one-out analysis, the proportion of the racial gap explained by SDoH remained consistent except for when diet health was not accounted for, in which case the proportion of racial gaps explained by SDoH was 89.2 mL (25.5%) for FEV~1~ and 110.5 mL (26.4%) for FVC in youths and 148.0 mL (29.5%) for FEV~1~ and 121.1 mL (17.7%) for FVC in adults (@suppfig-leavejob to @suppfig-leavediet).

## Discussion

Our understanding of the contribution of environmental and social factors to racial differences in lung function remains limited. A 2022 systematic review [@holland2022] found one representative study on in the US adults [@harik-khan2001] and one on children [@harik-khan2004]. The study on adults attributed 37.2-39.4% of the racial gap in lung function to sitting height and an additional 6.9-10.6% of the racial gap to poverty index, education, and BMI [@harik-khan2001]. In children 8 to 17 years of age, sitting height accounted for 43.1-53.1% of the racial gap, while family head education, poverty index, and serum levels of antioxidant vitamins accounted for an additional 6.9-10.4% of the racial differences [@harik-khan2004]. However, these studies were limited, as they only considered lung function disparities between Black and White individuals, evaluated a narrow set of SDoH, and used older NHANES III data collected in 1988–1994.

Our results show that SDoH explain a much higher proportion of racial differences in lung function between Black and White Americans [@harik-khan2001; @harik-khan2004]. We found that occupational exposures, physical inactivity, maternal and secondhand smoke, obesity, not having health insurance, lower education, and unhealthier diet, together, accounted for 19.4%-26.3% of racial gap in lung function between non-Hispanic Black and White participants and as much as 34.7% of the gap in males under 20. We separately found that excluding participants with higher levels of chronic stress reduced racial gaps in in lung function by 8.3-20.9%, while poverty alone accounted for 0.3-5.6% of the gap.

Importantly, the contribution of various SDoH or anthropometric factors to racial gaps in lung function reported by us and other researchers can sum to more than 100% [@Rothman2005]. There are two reasons behind this. Firstly, the interactions between different causes means that the combined impact of two causes may be either smaller or larger than the sum of their individual effects. Secondly, the influence of these factors could theoretically be substantial enough to fill and reverse the racial gaps in lung function.

Our results are consistent with a growing body of literature that implicates historical and structural inequities in perpetuating health disparities [@nardone2020; @schuyler2022; @gaffney2021; @levy2018]. However, considerable variability exists within race categories. Controlling for the same SDoH factors reduced the racial gap more among US-born Black and White individuals. Other studies have reported higher levels of allostatic load, hypertension, and mortality risk among US-born Black individuals compared to Black immigrants [@doamekpor2015; @brown2017; @Singh2001] and among Black individuals born in different parts of the US [@Fang1996].

Our baseline reference population only excluded individuals with a history of smoking, lung disease, or respiratory symptoms. In this population, age-, sex-, and height-adjusted FEV~1~ and FVC were highest for Mexican Americans, followed by Non-Hispanic White, Other Hispanic, Asian, and Non-Hispanic Black populations. Introducing nine additional exclusion criteria to reference populations reduced racial disparities in lung function between Black and White individuals, but not for Asian population. Of note, the proportion of Asian people in the successive reference populations remained within 1% of the baseline value, indicating that the investigated SDoH did not disproportionately affect this population.

Developing fair and practical lung function reference equations is challenging because of our limited understanding of complex exposures, lack of good representative data, and diverse applications of pulmonary function tests [@adibi; @diao2024]. Recognizing the good faith efforts of those working diligently to balance feasibility, practicality, and an ideal accounting for all potential biases, one possible way forward, at least for some use cases of spirometry, involves explicitly accounting for the effect of complex exposures. This does not require asking patients for their exposure history or social determinants at the point of care and can be achieved by tightening the inclusion criteria in the reference populations at the reference algorithm development stage. Excluding individuals with unfavorable SDoH ensures a more uniformly healthy reference population across racial identities and reduces bias in the dataset.

Proposals for developing lung function standards using data from participants of "middle-class origin who live and work in clean environments" have appeared in the literature as early as 1984 [@Myers1984]. Another example is the World Health Organization’s birth to 2-year growth standards, which recruited participants with favorable SDoH to establish ideal growth patterns [@mercedes2004].

To our knowledge, this is the first study to evaluate the contribution of a wide range of SDoH to racial gaps in lung function across multiple groups of race and ethnicity in the US. We used the latest available NHANES data that included spirometry, which makes these results representative of the US population. Our method of successive exclusions in reference populations accounts for potential interactions between different SDoH factors, and avoids the need for statistical assumptions required for multivariable linear regressions with SDoH predictors. Our analysis is open-source and easily reproducible.

There are also important limitations. The true contribution of SDoH to racial gaps in lung function is likely higher that what is reported here, as some aspects of SDoH are not captured in NHANES. Our reliance on NHANES data restricts generalizability beyond the US and limits us to coarse race and ethnicity categories, which could conceal meaningful differences [@movva23a]. Included NHANES cycles lack data on altitude, sitting height, life-course exposure to pollutants, and intergenerational effects of exposures that have been shown to affect lung function [@mahon2021; @svanes2023]. Another complicating factor is that racial gaps in lung function are typically adjusted for height even though height itself is affected by SDoH [@kuh1989; @freedman2000].

There is a need for longitudinal studies with diverse and well-characterized international cohorts. Repeated measurements of SDoH and lung function throughout life course can help elucidate the emergence of lung function disparities and associated causal pathways [@Gaffney2024].

## Conclusions

Our study underscores the significant influence of social determinants of health on lung function and shows that a larger proportion of racial gaps in lung function can be explained by social determinants of health than previously reported. However, we were unable to account for all racial differences in lung function based on measured social determinants of health in NHANES 2007-2012.

```{mermaid, include=T}
%%| label: fig-flowchart
%%| fig-cap: Flow of participants
flowchart TD
    B[n=30,442] -- Excluded missing FEV1 or FVC --> C[n=20,050]
    C -- Excluded low quality spirometry --> E[n=17,032]
    E -- Excluded smokers and those with respiratory diagnoses or symptoms --> F[n=8,802]
    F -- Adults --> A0[n=4,832]
    F -- Youth  --> Y0[n=3,970]

```

```{r}
#| label: tbl-table1
#| tbl-cap: Characteristics of Participants Included in the Baseline Reference Population
#TODO this is great, but does not consider survey weights
#TODO this does not show missingness and value judgments around how we handled it properly.

 
 table1 <- readRDS("nhanes_2007_2012.rds") %>%
    mutate(fev1 = fev1_pre,
           fvc  = fvc_pre) %>%
    drop_na(fev1, fvc) %>%
    filter(spiro_status_pre == 1) %>%
    filter(fev1_quality_pre == "A" | fev1_quality_pre == "B") %>%
    filter(fvc_quality_pre  == "A" | fvc_quality_pre  == "B") %>%
#    filter(race %in% c(3,4)) %>%
    filter ((is.na(current_smoke) | (current_smoke == "3")) &
         (is.na(ever_100_smoke) | (ever_100_smoke != "1")) &
         (is.na(last_5_days_cigarettes) |  (last_5_days_cigarettes != "1")) &
         (is.na(last_5_days_pipes) | (last_5_days_pipes != "1")) &
         (is.na(last_5_days_cigars) | (last_5_days_cigars != "1")) &
         (is.na(ever_asthma) | (ever_asthma !="1")) &
         (is.na(ever_bronchitis) | (ever_bronchitis != "1")) &
         (is.na(ever_emphysema) | (ever_emphysema != "1")) &
         (is.na(cough_3_month) | (cough_3_month!=1)) & 
         (is.na(phlegm_3_month) | (phlegm_3_month!=1)) & 
         (is.na(wheezing_past_yr) | (wheezing_past_yr!=1)) & 
         (is.na(dry_cough_night_past_yr) | (dry_cough_night_past_yr!=1))) %>%
    mutate(age_group = ifelse(age>=20, "Adults", "Youth"),
          sex_text   = case_match(sex,
                                     "1" ~ "Male"  ,
                                     "2" ~ "Female" ),
          time_in_us = case_match(time_in_us, 
                                  1 ~ "Less than 1 year",
                                  2 ~ "1 yr., less than 5 yrs.",
                                  3 ~ "5 yrs., less than 10 yrs.",
                                  4 ~ "10 yrs., less than 15 yrs.", 
                                  5 ~ "15 yrs., less than 20 yrs.",
                                  6 ~ "20 yrs., less than 30 yrs.", 
                                  7 ~ "30 yrs., less than 40 yrs.", 
                                  8 ~ "40 yrs., less than 50 yrs.", 
                                  9 ~ "50 years or more", 
                                  77 ~ NA,
                                  99 ~ NA, 
                                  ),
          has_insurance = case_match(has_insurance, 
                                  1 ~ "Yes",
                                  2 ~ "No",
                                  7 ~ "Refused",
                                  9 ~ "Don't Know", 
                                  ),
          cough_3_month = case_match(cough_3_month,
                                     1 ~ "Yes"  ,
                                     2 ~ "No"),
          phlegm_3_month = case_match(phlegm_3_month,
                                     1 ~ "Yes"  ,
                                     2 ~ "No"),
          wheezing_past_yr = case_match(wheezing_past_yr,
                                     1 ~ "Yes"  ,
                                     2 ~ "No"),
          dry_cough_night_past_yr = case_match(dry_cough_night_past_yr,
                                     1 ~ "Yes"  ,
                                     2 ~ "No"),
          ever_asthma = case_match(ever_asthma,
                                     "1" ~ "Yes"  ,
                                     "2" ~ "No"),
          ever_bronchitis = case_match(ever_bronchitis,
                                     "1" ~ "Yes"  ,
                                     "2" ~ "No"),
          ever_emphysema = case_match(ever_emphysema,
                                     "1" ~ "Yes"  ,
                                     "2" ~ "No"),
          ever_100_smoke = case_match(ever_100_smoke,
                                     "1" ~ "Yes"  ,
                                     "2" ~ "No"),
          current_smoke = case_match(current_smoke,
                                     "1" ~ "Everyday"  ,
                                     "2" ~ "Some days",
                                     "3" ~ "Not at all"),
          education_adults = case_match(education_adults,
                                     "1" ~ "Less than 9th grade"  ,
                                     "2" ~ "9-11th grade",
                                     "3" ~ "High school graduate",
                                     "4" ~ "Some college or AA degree",
                                     "5" ~ "College graduate or above"),
          education_adults = factor(education_adults, 
                                    levels = c("College graduate or above",
                                               "Some college or AA degree",
                                               "High school graduate",
                                               "9-11th grade",
                                               "Less than 9th grade"
                                                                 )),
          now_attending_school = case_match(now_attending_school,
                                          1 ~ "In school",
                                          2 ~ "Between grades",
                                          2 ~ "Not in school"),
          smoker_in_household = case_match(smoker_in_household,
                                          1 ~ "Yes",
                                          2 ~ "No"),
          maternal_smoke = case_match(maternal_smoke,
                                          1 ~ "Yes",
                                          2 ~ "No"),
          home_ownership = case_match(home_ownership,
                                          1 ~ "Owned or being bought",
                                          2 ~ "Rented",
                                          3 ~ "Other arrangements"),
          mineral_dusts = case_match(mineral_dusts,
                                          1 ~ "Yes",
                                          2 ~ "No"),
          organic_dusts = case_match(organic_dusts,
                                          1 ~ "Yes",
                                          2 ~ "No"),
          exhaust_fumes = case_match(exhaust_fumes,
                                          1 ~ "Yes",
                                          2 ~ "No"),
          other_fumes = case_match(other_fumes,
                                          1 ~ "Yes",
                                          2 ~ "No"),
          healthy_diet = case_match(healthy_diet,
                                          1 ~ "Excellent",
                                          2 ~ "Very good",
                                          3 ~ "Good",
                                          4 ~ "Fair",
                                          5 ~ "Poor"),
          healthy_diet = factor(healthy_diet, levels = c("Excellent",
                                                         "Very good",
                                                         "Good",
                                                         "Fair",
                                                         "Poor")),
          vigorous_work = case_match(vigorous_work,
                                          1 ~ "Yes",
                                          2 ~ "No"),
          moderate_work = case_match(moderate_work,
                                          1 ~ "Yes",
                                          2 ~ "No"),
          vigorous_recreational = case_match(vigorous_recreational,
                                          1 ~ "Yes",
                                          2 ~ "No"),
          moderate_recreational = case_match(moderate_recreational,
                                          1 ~ "Yes",
                                          2 ~ "No"),
  
          smoker=
       !((is.na(current_smoke) | (current_smoke == "3")) &
         (is.na(ever_100_smoke) | (ever_100_smoke != "1")) &
         (is.na(last_5_days_cigarettes) |  (last_5_days_cigarettes != "1")) &
         (is.na(last_5_days_pipes) | (last_5_days_pipes != "1")) &
         (is.na(last_5_days_cigars) | (last_5_days_cigars != "1"))),
         resp_symptoms = !((is.na(cough_3_month) | (cough_3_month!=1)) & 
         (is.na(phlegm_3_month) | (phlegm_3_month!=1)) & 
         (is.na(wheezing_past_yr) | (wheezing_past_yr!=1)) & 
         (is.na(dry_cough_night_past_yr) | (dry_cough_night_past_yr!=1))),
         resp_dx = !((is.na(ever_asthma) | (ever_asthma !="1")) &
         (is.na(ever_bronchitis) | (ever_bronchitis != "1")) &
         (is.na(ever_emphysema) | (ever_emphysema != "1"))),
         physically_active = ((is.na(vigorous_work) | (vigorous_work==1)) | 
         (is.na(vigorous_recreational)   | (vigorous_recreational==1)) | 
         (is.na(moderate_work)   | (moderate_work==1)) | 
         (is.na(moderate_recreational)   | (moderate_recreational==1))),
         occupational_exposure = !((is.na(mineral_dusts) | (mineral_dusts!=1)) & 
         (is.na(organic_dusts)   | (organic_dusts!=1)) & 
         (is.na(exhaust_fumes)   | (exhaust_fumes!=1)) & 
         (is.na(other_fumes)     | (other_fumes!=1))),
         home_owner = (is.na(home_ownership) | (home_ownership==1)), 
         healthy_eater = ((is.na(healthy_diet) | 
               (healthy_diet==1) | 
               (healthy_diet==2) | 
               (healthy_diet==3)))
         ) 
 
 label(table1$race_text_nhanes) <- "Race and Ethnicity"
 label(table1$age) <- "Age (years)"
 label(table1$fev1) <- "FEV1 (mL)"
 label(table1$fvc) <- "FVC (mL)"
 label(table1$sex_text) <- "Biological Sex at Birth"
 label(table1$birth_country) <- "Birth Country"
 label(table1$smoker_in_household) <- "Smoker in household"
 label(table1$maternal_smoke) <- "Maternal smoke during pregnancy (For youth)"
 label(table1$mineral_dusts) <- "Occupational Exposure to Mineral Dusts"
 label(table1$organic_dusts) <- "Occupational Exposure to Organic Dusts"
 label(table1$exhaust_fumes) <- "Occupational Exposure to Exhaust Fumes"
 label(table1$other_fumes) <- "Occupational Exposure to Other Fumes"
 label(table1$education_adults) <- "Education Level for Adults"
 label(table1$now_attending_school) <- "Currently Attending School (for youth)"
 label(table1$healthy_diet) <- "self-reported Diet Health"
 label(table1$vigorous_work) <- "Vigorous Activity at Work (10 min/week)"
 label(table1$vigorous_recreational) <- "Recreational Vigorous Activity (10 min/week)"
 label(table1$moderate_work) <- "Moderate Activity at Work (10 min/week)"
 label(table1$moderate_recreational) <- "Recreational Moderate Activity (10 min/week)"
 label(table1$bmi) <- "Body Mass Index"
 label(table1$income_poverty_ratio) <- "Income to Poverty Ratio"
 label(table1$home_owner) <- "Home Owner"
 label(table1$has_insurance) <- "Health Insurance"
 
 
 table1(~ age + race_text_nhanes + sex_text + 
          fev1 + fvc +
          smoker_in_household + maternal_smoke +
          mineral_dusts + organic_dusts + exhaust_fumes + other_fumes +
          income_poverty_ratio + home_owner + has_insurance +
          education_adults + now_attending_school + 
          healthy_diet + vigorous_work + moderate_work + vigorous_recreational + moderate_recreational + bmi 
          | age_group, table1, digits=2)
 
```

```{r, warning=FALSE, message=FALSE}
#| label: fig-popchange
#| fig-cap: Changes in population composition in successively more restrictive reference populations. Each reference population adds additional exclusion criteria based on social determinants of health. Race and ethnicity groups that experience a decline in their percentage of the population compared to the reference baseline (moving from left to right) are disproportionately affected by the social determinants of health that are being considered here. 


refs_adult_all_races <- createCohort("adult", includedRace = c(1,2,3,4,5,6,7))
message("Adult counts:")
message(map_df(refs_adult_all_races, count))

refs_youth_all_races <- createCohort("youth", includedRace = c(1,2,3,4,5,6,7))
message("Youth counts:")
message(map_df(refs_youth_all_races, count))

plot_participants_change <- function(refs_adult_list, refs_youth_list, single_sex = FALSE, 
                                     metric1="fev1", metric2="fvc", includedRace=c(1,2,3,4,5,6,7)){
  
  # Combine refs_df_adult and refs_df_youth
  combine_refs_df <- function(refs_list) {
    refs_df <- do.call(rbind, lapply(seq_along(refs_list), function(i) refs_list[[i]]))
    refs_df %>%
      mutate(ref=factor(ref, levels=c("reference", "job unexposed", "physically active", 
                                      "no maternal smoke", "no 2ndhand smoke", "not obese", "homeowner", "insured","educated", "healthy diet"))) %>%
      group_by(ref) %>%
      count(race_text_nhanes, wt = MEC6YR) %>%
      mutate(perc = n / sum(n)) %>%
      ungroup()
  }
  
  refs_df_percent_adult <- combine_refs_df(refs_adult_list) 
  refs_df_percent_youth <- combine_refs_df(refs_youth_list)
  
  plot_gap_perc <- function(refs_df_percent, title, suppress_legend=FALSE) {
    p <- ggplot(refs_df_percent) +
      geom_bar(aes(x=ref, y=perc, fill=race_text_nhanes), stat="identity", position = "fill") +
      geom_text(aes(x=ref, y=perc, fill=race_text_nhanes, label=scales::percent(perc, accuracy = 1)), position = position_stack(vjust = 0.5), color = "white", size = 2) +
      scale_y_continuous(labels=scales::percent) +
      scale_fill_brewer(palette = "Set2") +
      ggtitle(title) +
      labs(x = "", y = "Participants") +
      guides(fill=guide_legend(title="Race")) +
      theme_few() + theme(axis.text.x = element_text(angle = 90, size=7, hjust=0.95,vjust=0.2))
    
    
    if (suppress_legend) {
      p <- p +  theme(legend.position="none")
    } else {
      p <- p +  theme(legend.position="bottom") 
    }
    return(p)
  }
  
  gap_perc_black_adult <- plot_gap_perc(refs_df_percent_adult, "Adults (≥20 yrs)")
  gap_perc_black_youth <- plot_gap_perc(refs_df_percent_youth, "Youth (<20 yrs)")
  
  p <- (((gap_perc_black_youth) + 
           plot_layout(axes = "collect")) | 
          ((gap_perc_black_adult) + 
             plot_layout(axes = "collect")) ) + 
    plot_annotation(tag_levels = 'A') 
  
  p <- ((gap_perc_black_youth + gap_perc_black_adult +  
           plot_layout(axes="collect"))/guide_area()) + plot_annotation(tag_levels = 'A') + plot_layout(guides = "collect")
  
  return(p)
}

plot_participants_change(refs_adult_all_races, refs_youth_all_races, includedRace = c(1,2,3,4,5,6,7))

```

```{r, warning=FALSE, message=FALSE}
#| label: fig-racialgap
#| fig-cap: Changes in lung function racial gaps between Non-Hispanic Black and Non-Hispanic White participants in successively more restrictive reference populations. Lung function differences are adjusted for height, age, and biological sex at birth. Positive values indicate higher lung function in the Non-Hispanic White population.  
 
refs_adult <- createCohort("adult")
message("Adult counts:")
message(map_df(refs_adult, count))

refs_youth <- createCohort("youth")
message("Youth counts:")
message(map_df(refs_youth, count))

plot_racial_gap_change(refs_adult, refs_youth) + plot_annotation(
  title = "Non-Hispanic Black vs. Non-Hispanic White population"
  )

```

```{r, eval=F, include=FALSE}
# Let's try bootstrapping
resample_rows <- function(data) {
  data[sample(nrow(data), replace = TRUE), , drop = FALSE]
}

# Function to generate bootstrap samples
bootstrap_samples <- function(df, n=1000) {
  df_list = lapply(1:n, function(i) {
    df_bootstrap = resample_rows(df)
    df_bootstrap$bootstrap_id = i
    df_bootstrap
  })
  
  bind_rows(df_list)
}

samples_last <- bootstrap_samples(refs_adult[[10]]) %>%
  mutate(bootstrap_id=factor(bootstrap_id))

samples_baseline <- bootstrap_samples(refs_adult[[1]]) %>%
  mutate(bootstrap_id=factor(bootstrap_id))


bootstrapped_gap <- tibble(bootstrap_id = 1:1000) %>%
  mutate(
    fev1_gap = map_dbl(bootstrap_id, function(id) {
      sample_data_last <- samples_last %>% filter(bootstrap_id == id)
      sample_data_base <- samples_baseline %>% filter(bootstrap_id == id)

      -1*race_estimate(sample_data_last, outcome = 'fev1', includedRace = c(3, 4))$estimate-(-1*race_estimate(sample_data_base, outcome = 'fev1', includedRace = c(3, 4))$estimate
)
    }),

    fvc_gap = map_dbl(bootstrap_id, function(id) {
      sample_data_last <- samples_last %>% filter(bootstrap_id == id)
      sample_data_base <- samples_baseline %>% filter(bootstrap_id == id)

      -1*race_estimate(sample_data_last, outcome = 'fvc', includedRace = c(3, 4))$estimate-(-1*race_estimate(sample_data_base, outcome = 'fvc', includedRace = c(3, 4))$estimate
)
    }),

  )



bootstrapped_gap %>% filter(fev1_gap>0) %>% count()/1000*2
bootstrapped_gap %>% filter(fvc_gap>0) %>% count()/1000*2


```

```{r, warning=FALSE, message=FALSE, include=FALSE, eval=FALSE}
#| label: fig-racialgap-home-bmi-job
#| fig-cap: Changes in lung function racial gaps between Non-Hispanic Black and Non-Hispanic White participants after exclusions based on home ownership, BMI, and occupational exposures to fumes and dusts. Lung function differences are adjusted for height, age, and biological sex at birth. Positive values indicate higher lung function in the Non-Hispanic White population. 
 
createCohort3Factor <- function (ageGroup,sex='all') {
  if (!(ageGroup %in% c("adult", "youth"))) 
    stop("Invalid age group")
  if (!(sex %in% c("all", "male", "female"))) 
    stop("Invalid sex")
  

  nhanes <- readRDS("nhanes_2007_2012.rds") 
  
  stopifnot((nhanes %>% count()) == 30442) # Ensure we have the correct n
  stopifnot((nhanes %>% filter(race %in% c(3,4)) %>% count()) == 18359) 
  stopifnot((nhanes %>% drop_na(fev1_pre, fvc_pre)  %>% count()) == 20050) 
  
  if (sex=='female') {
    warning('only females are included.')
    nhanes <- nhanes %>% filter(sex==2)
  }
  
  if (sex=='male') {
    warning('only males are included.')
    nhanes <- nhanes %>% filter(sex==1)
  }

  nhanes <- nhanes %>%
    mutate(fev1 = fev1_pre/1000,
           fvc  = fvc_pre/1000) %>%
    drop_na(fev1, fvc) %>%
    filter(spiro_status_pre == 1) %>%
    filter(fev1_quality_pre == "A" | fev1_quality_pre == "B") %>%
    filter(fvc_quality_pre  == "A" | fvc_quality_pre  == "B") %>%
    mutate(race_text_nhanes = str_remove(race_text_nhanes, "Non-Hispanic "))
  
  message(paste0("NHANES N (excluding missing or low quality spiro: ", 
                 (nhanes %>% count())))
  
  nhanes_bw <- nhanes %>%
        filter(race %in% c(3,4))

  message(paste0("NHANES Black and White N (excluding missing or low quality spiro: ", 
                 (nhanes_bw %>% count())))
  
if (ageGroup=="adult") {
nhanes_bw <- nhanes_bw %>%
  filter(age>=20)

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}
  
if (ageGroup=="youth") {
nhanes_bw <- nhanes_bw %>%
  filter(age<20)

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}

ref0 <- nhanes_bw

ref0 %>%
  group_by(race) %>%
  count()

ref1 <- ref0 %>%
  filter ((is.na(current_smoke) | (current_smoke == "3")) &
         (is.na(ever_100_smoke) | (ever_100_smoke != "1")) &
         (is.na(last_5_days_cigarettes) |  (last_5_days_cigarettes != "1")) &
         (is.na(last_5_days_pipes) | (last_5_days_pipes != "1")) &
         (is.na(last_5_days_cigars) | (last_5_days_cigars != "1")) &
         (is.na(ever_asthma) | (ever_asthma !="1")) &
         (is.na(ever_bronchitis) | (ever_bronchitis != "1")) &
         (is.na(ever_emphysema) | (ever_emphysema != "1")) &
         (is.na(cough_3_month) | (cough_3_month!=1)) & 
         (is.na(phlegm_3_month) | (phlegm_3_month!=1)) & 
         (is.na(wheezing_past_yr) | (wheezing_past_yr!=1)) & 
         (is.na(dry_cough_night_past_yr) | (dry_cough_night_past_yr!=1))) %>%
  mutate(ref="reference")


ref2 <- ref1 %>%
      filter((is.na(bmi) | (bmi<=30))) %>%
      filter(is.na(home_ownership) | (home_ownership==1)) %>%
    filter((is.na(mineral_dusts) | (mineral_dusts!=1)) & 
         (is.na(organic_dusts)   | (organic_dusts!=1)) & 
         (is.na(exhaust_fumes)   | (exhaust_fumes!=1)) & 
         (is.na(other_fumes)     | (other_fumes!=1))) %>%
      filter((is.na(bmi) | (bmi<=30))) %>%
  mutate(ref="home-job-bmi") 


refs <- list(ref1, ref2)

return(refs)
}

plot_racial_gap_change(createCohort3Factor("adult"), createCohort3Factor("youth"))

```

## References

::: {#refs}
:::

## Appendices

### Participant Flow Across Successive Reference Populations

::: {#suppfig-flowrefs}
Flow of participants across different reference populations

```{mermaid, include=T}
flowchart TD
    A1["Adults, n=4,832"] -- Excluded those with occupational exposures --> A2[n=2798]
    A2[n=2798] -- Excluded those not physically active --> A3[n=1835]
    A3[n=1835] -- Excluded those with maternal smoking exposure --> A4[n=1835]
    A4[n=1835] -- Excluded those with second-hand smoking exposure --> A5[n=1761]
    A5[n=1761] -- Excluded obese individuals --> A6[n=1258]
    A6[n=1258] -- Excluded those who did not own thier home --> A7[n=816]
    A7[n=816] -- Excluded those without health insurance --> A8[n=711]
    A8[n=711] -- Excluded those who did not ever attend college --> A9[n=571]
    A9[n=571] -- Excluded those with self-reported unhealthy diet --> A10[n=514]
    Y1["Youth, n=3,970"] -- Excluded those with occupational exposures --> Y2[n=3767]
    Y2[n=
    3767] -- Excluded those not physically active --> Y3[n=3432]
    Y3[n=
    3432] -- Excluded with maternal smoking exposure --> Y4[n=3116]
    Y4[n=
    3116] -- Excluded those with second-hand smoking exposure --> Y5[n=2866]
    Y5[n=
    2866] -- Excluded obese individuals --> Y6[n=2687]
    Y6[n=
    2687] -- Excluded those who did not own thier home --> Y7[n=1592]
    Y7[n=
    1592] -- Excluded those without health insurance --> Y8[n=1455]
    Y8[n=
    1455] -- Excluded those who do not attend school --> Y9[n=1441]
    Y9[n=
    1441] -- Excluded those with self-reported unhealthy diet --> Y10[n=1407]

```
:::

### Participants Characteristics by Race

::: {#supptab-missing-ness-by-race}
```{r}
 
 table1(~ age + race_text_nhanes + sex_text + 
          fev1 + fvc +
          birth_country + 
          smoker_in_household + maternal_smoke +
          mineral_dusts + organic_dusts + exhaust_fumes + other_fumes +
          income_poverty_ratio + home_owner + has_insurance +
          education_adults + now_attending_school + 
          healthy_diet + vigorous_work + moderate_work + vigorous_recreational + moderate_recreational + bmi 
          | race_text_nhanes, table1, digits=2)
```

Characteristics of Participants Included in the Baseline Reference Population by Self-identified Race
:::

### Separate Analysis by Biological Sex

::: {#suppfig-females}
```{r,  warning=FALSE, message=FALSE}
refs_adult_female <- createCohort("adult", sex="female")
refs_youth_female <- createCohort("youth", sex="female")


plot_racial_gap_change(refs_adult_female, refs_youth_female, single_sex=TRUE)
```

Changes in lung function racial gaps between female Non-Hispanic Black and Non-Hispanic White participants in successively more restrictive reference populations. Lung function differences are adjusted for height, and age. Positive values indicate higher lung function in the Non-Hispanic White population.
:::

::: {#suppfig-males}
```{r, warning=FALSE, message=FALSE}
refs_adult_male <- createCohort("adult", sex="male")
refs_youth_male <- createCohort("youth", sex="male")


plot_racial_gap_change(refs_adult_male, refs_youth_male, single_sex=TRUE)
```

Changes in lung function racial gaps between male Non-Hispanic Black and Non-Hispanic White participants in successively more restrictive reference populations. Lung function differences are adjusted for height, and age. Positive values indicate higher lung function in the Non-Hispanic White population.
:::

### Intersection of Race and Country of Birth

We produced results separately for self-identified Black and White person born in the US.

::: {#suppfig-usborn}
```{r, warning=FALSE, message=FALSE}
refs_adult_US_Black <- createCohort("adult", BirthCountry="US")
# message("Adult counts:")
# message(map_df(refs_adult, count))

refs_youth_US_Black <- createCohort("youth", BirthCountry="US")
# message("Youth counts:")
# message(map_df(refs_youth, count))

plot_racial_gap_change(refs_adult_US_Black, refs_youth_US_Black)
```

Racial gap in lung function among those born in the US
:::

::: {#supptab-fig1byusborn}
```{r}
table1_BW <- table1 %>% 
  filter(race_text_nhanes == "Non-Hispanic Black" | race_text_nhanes == "Non-Hispanic White" )

table1(~ age + race_text_nhanes + sex_text + 
          fev1 + fvc +
          smoker_in_household + maternal_smoke +
          mineral_dusts + organic_dusts + exhaust_fumes + other_fumes +
          income_poverty_ratio + home_owner + has_insurance +
          education_adults + now_attending_school + 
          healthy_diet + vigorous_work + moderate_work + vigorous_recreational + moderate_recreational + bmi 
          | birth_country+race_text_nhanes, table1_BW, digits=2)
```

Characteristics of Black Participants Included in the Baseline Reference Population by Country of Birth
:::

### Other Race Groups

::: {#suppfig-Mexican}
```{r, message=F, warning=F}

refs_adult_mex <- createCohort("adult", includedRace=c(3,1))
message("Adult counts:")
message(map_df(refs_adult_mex, count))

refs_youth_mex <- createCohort("youth", includedRace=c(3,1))
message("Youth counts:")
message(map_df(refs_youth_mex, count))

plot_racial_gap_change(refs_adult_mex, refs_youth_mex, includedRace=c(3,1)) + plot_annotation(
  title = "Mexican American vs. Non-Hispanic White population")

```

Changes in lung function racial gaps between Mexican American and Non-Hispanic White participants in successively more restrictive reference populations. Lung function differences are adjusted for height, age, and biological sex at birth. Positive values indicate higher lung function in the Non-Hispanic White population. Negative values indicated higher lung function in the Mexican American population.
:::

::: {#suppfig-hispanic}
```{r, message=F, warning=F}

refs_adult_hisp <- createCohort("adult", includedRace=c(3,2))
message("Adult counts:")
message(map_df(refs_adult_hisp, count))

refs_youth_hisp <- createCohort("youth", includedRace=c(3,2))
message("Youth counts:")
message(map_df(refs_youth_hisp, count))

plot_racial_gap_change(refs_adult_hisp, refs_youth_hisp, includedRace=c(3,2)) + plot_annotation(
  title = "Other Hispanic vs. Non-Hispanic White population")
```

Changes in lung function racial gaps between Other Hispanic and Non-Hispanic White participants in successively more restrictive reference populations. Lung function differences are adjusted for height, age, and biological sex at birth. Positive values indicate higher lung function in the Non-Hispanic White population.
:::

::: {#suppfig-Asian}
```{r, message=F, warning=F}
refs_adult_asian <- createCohort("adult", includedRace=c(3,6))
message("Adult counts:")
message(map_df(refs_adult_asian, count))

refs_youth_asian <- createCohort("youth", includedRace=c(3,6))
message("Youth counts:")
message(map_df(refs_youth_asian, count))

plot_racial_gap_change(refs_adult_asian, refs_youth_asian, includedRace=c(3,6))  + plot_annotation(
  title = "Asian vs. Non-Hispanic White population")
```

Changes in lung function racial gaps between Asian and Non-Hispanic White participants in successively more restrictive reference populations. Lung function differences are adjusted for height, age, and biological sex at birth. Positive values indicate higher lung function in the Non-Hispanic White population.
:::

::: {#suppfig-Other}
```{r, message=F, warning=F}

refs_adult_oth <- createCohort("adult", includedRace=c(3,7))
message("Adult counts:")
message(map_df(refs_adult_oth, count))

refs_youth_oth <- createCohort("youth", includedRace=c(3,7))
message("Youth counts:")
message(map_df(refs_youth_oth, count))

plot_racial_gap_change(refs_adult_oth, refs_youth_oth, includedRace=c(3,7))

```

Changes in lung function racial gaps between Other race including multi-racial and Non-Hispanic White participants in successively more restrictive reference populations. Lung function differences are adjusted for height, age, and biological sex at birth. Positive values indicate higher lung function in the Non-Hispanic White population.
:::

### Allostatic Load

Excluding participants who had allostatic load score of 1 or higher reduced racial gap in FEV~1~ and FVC by 37.5 mL (10.7%) and 34.6 mL (8.3%) in youths and by 105.0 mL (20.9%) and 100.2 mL (14.6%) in adults.

::: {#suppfig-allostaticload}
```{r, warning=FALSE, message=FALSE}


refs_adult_incomeAllostaticLoadOnly <- createCohort("adult", AllostaticLoadOnly=TRUE)
refs_youth_incomeAllostaticLoadOnly <- createCohort("youth", AllostaticLoadOnly=TRUE)

plot_racial_gap_change(refs_adult_incomeAllostaticLoadOnly, refs_youth_incomeAllostaticLoadOnly)

```

Changes in lung function racial gaps between Non-Hispanic Black and Non-Hispanic White participants in successively more restrictive reference populations solely based on allostatic load score. Lung function differences are adjusted for height, age, and biological sex at birth. Positive values indicate higher lung function in the Non-Hispanic White population.
:::

### Income to Poverty Ratio

When we excluded participants with income to poverty ratio under five, the proportion of racial gap in FEV~1~ and FVC that was explained by poverty was 13.0 mL (3.7%) and 10.4 mL (2.5%) in youths, and 28.2 mL (5.6%) and 2 mL (0.3%) in adults, and as shown in @suppfig-incomepovertyratio.

::: {#suppfig-incomepovertyratio}
```{r, warning=FALSE, message=FALSE}


refs_adult_incomePovertyRatioOnly <- createCohort("adult", incomePovertyRatioOnly=TRUE)
refs_youth_incomePovertyRatioOnly <- createCohort("youth", incomePovertyRatioOnly=TRUE)

plot_racial_gap_change(refs_adult_incomePovertyRatioOnly, refs_youth_incomePovertyRatioOnly)
```

Changes in lung function racial gaps between Non-Hispanic Black and Non-Hispanic White participants in successively more restrictive reference populations solely based on income to poverty ratio. Lung function differences are adjusted for height, age, and biological sex at birth. Positive values indicate higher lung function in the Non-Hispanic White population.
:::

### Leave-one-out Analysis

Changes in lung function racial gaps between Non-Hispanic Black and Non-Hispanic White participants in successively more restrictive reference populations. In each of the figures below, one of the original SDoH-based exclusion criteria are left out. Lung function differences are adjusted for height, age, and biological sex at birth. Positive values indicate higher lung function in the Non-Hispanic White population.

::: {#suppfig-leavejob}
```{r, warning=FALSE, message=FALSE}
 plot_racial_gap_change(refs_adult[-2], refs_youth[-2])
```

Leaving out job exposure
:::

::: {#suppfig-leavephysicalactivity}
```{r, warning=FALSE, message=FALSE}
 plot_racial_gap_change(refs_adult[-3], refs_youth[-3])
```

Leaving out physical activity
:::

::: {#suppfig-leavematernalsmoke}
```{r, warning=FALSE, message=FALSE}
 plot_racial_gap_change(refs_adult[-4], refs_youth[-4])
```

Leaving out maternal smoke
:::

::: {#suppfig-leavesecondhandsmoke}
```{r, warning=FALSE, message=FALSE}
 plot_racial_gap_change(refs_adult[-5], refs_youth[-5])
```

Leaving out second-hand smoke exposure
:::

::: {#suppfig-leaveobesity}
```{r, warning=FALSE, message=FALSE}
 plot_racial_gap_change(refs_adult[-6], refs_youth[-6])
```

Leaving out obesity
:::

::: {#suppfig-leavehomeowner}
```{r, warning=FALSE, message=FALSE}
 plot_racial_gap_change(refs_adult[-7], refs_youth[-7])
```

Leaving out home ownership
:::

::: {#suppfig-leaveinsurance}
```{r, warning=FALSE, message=FALSE}
 plot_racial_gap_change(refs_adult[-8], refs_youth[-8])
```

Leaving out health insurance
:::

::: {#suppfig-leaveeducation}
```{r, warning=FALSE, message=FALSE}
 plot_racial_gap_change(refs_adult[-9], refs_youth[-9])
```

Leaving out education
:::

::: {#suppfig-leavediet}
```{r, warning=FALSE, message=FALSE}
 plot_racial_gap_change(refs_adult[-10], refs_youth[-10])
```

Leaving out diet health
:::

````{=html}
<!-- 


### Establishing the order of exclusion

First, we need to do some preprocessing to create a reference population for evaluation purposes.

```{r, eval=F}

create_ref_for_eval <- function(ageGroup, binaryRace=TRUE) {
  if (!(ageGroup %in% c("adult", "youth", "all_ages"))) stop("Invalid age group")
  nhanes <- readRDS("nhanes_2007_2012.rds") %>%
  mutate(fev1 = fev1_pre/1000,
         fvc  = fvc_pre/1000) %>%
  drop_na(fev1, fvc)

 if (binaryRace) {
   nhanes <- nhanes %>%
     filter(race %in% c(3,4))}

 if (ageGroup=="adult") {
  nhanes_bw <- nhanes %>%
  filter(age>=20)
  message("adult")
}
   
 if (ageGroup=="youth") {
   nhanes_bw <- nhanes %>%
     filter(age<20)
   message("Youth")
 }

if (ageGroup=="all_ages") {
  nhanes_bw <- nhanes 
  message("All Ages")
 }

#vis_miss(nhanes_bw, warn_large_data = F)

ref0 <- nhanes_bw

ref1 <- ref0 %>%
  filter ((is.na(current_smoke) | (current_smoke == "3")) &
         (is.na(ever_100_smoke) | (ever_100_smoke != "1")) &
         (is.na(last_5_days_cigarettes) |  (last_5_days_cigarettes != "1")) &
         (is.na(last_5_days_pipes) | (last_5_days_pipes != "1")) &
         (is.na(last_5_days_cigars) | (last_5_days_cigars != "1")) &
         (is.na(ever_asthma) | (ever_asthma !="1")) &
         (is.na(ever_bronchitis) | (ever_bronchitis != "1")) &
         (is.na(ever_emphysema) | (ever_emphysema != "1")) &
         (is.na(cough_3_month) | (cough_3_month!=1)) & 
         (is.na(phlegm_3_month) | (phlegm_3_month!=1)) & 
         (is.na(wheezing_past_yr) | (wheezing_past_yr!=1)) & 
         (is.na(dry_cough_night_past_yr) | (dry_cough_night_past_yr!=1))) 
  
ref_eval <- ref1 %>% 
    mutate(
     bmi = ifelse((is.na(bmi) | (bmi<=30)), 1,0),
      occupational_exposure = ifelse(
         ((is.na(mineral_dusts) | (mineral_dusts!=1)) & 
         (is.na(organic_dusts)   | (organic_dusts!=1)) & 
         (is.na(exhaust_fumes)   | (exhaust_fumes!=1)) & 
         (is.na(other_fumes)     | (other_fumes!=1))), 
        1, 0),
      maternal_smoke = ifelse(
        ((is.na(maternal_smoke) | (maternal_smoke!=1))), 1, 0),
      smoker_in_household = ifelse(
        ((is.na(smoker_in_household) | (smoker_in_household != "1"))), 1, 0),
      physically_active    = ifelse(((is.na(vigorous_work) | (vigorous_work==1)) | 
         (is.na(vigorous_recreational)   | (vigorous_recreational==1)) | 
         (is.na(moderate_work)   | (moderate_work==1)) | 
         (is.na(moderate_recreational)   | (moderate_recreational==1))), 1, 0),
      healthy_diet = ifelse(((is.na(healthy_diet) | 
               (healthy_diet==1) | 
               (healthy_diet==2) | 
               (healthy_diet==3))), 1, 0),
      general_health = ifelse(
        (general_health==1) |
        (general_health==2), 1, 0), 
      has_insurance = ifelse(((is.na(has_insurance) | 
               (has_insurance==1))), 1, 0),
     education = ifelse(((age>=20) & 
(is.na(education_adults) | (education_adults %in% c(4,5)))) | ((age<20) & (is.na(now_attending_school) | (now_attending_school != 3))),1,0),
      home_ownership = ifelse(
        (is.na(home_ownership) | (home_ownership==1)), 1,0),
     education_adults = ifelse((
(age>=20) &
(is.na(education_adults) | (education_adults %in% c(4,5)))), 1, 0),
     now_attending_school = ifelse(((age<20) & (is.na(now_attending_school) | (now_attending_school != 3))), 1,0),
     survey_weights = importance_weights(MEC6YR)
      ) %>%
    select(
      fev1,
      survey_weights,
      sex,
      age,
      height,
      race,
      race_text_nhanes,
      occupational_exposure,
      maternal_smoke,
      smoker_in_household, 
      bmi,
      general_health,
      physically_active,
      healthy_diet,
      has_insurance,
      education,
      education_adults,
      now_attending_school,
      birth_country,
      home_ownership
    )
return(ref_eval)
}
```

Now we can look at multivariate association ranking.

```{r, eval=FALSE}

compareEffectSizes <- function(ageGroup){
   if (!(ageGroup %in% c("adult", "youth"))) stop("Invalid age group")
 
ref_eval <- create_ref_for_eval(ageGroup)

#TODO decide whether or not general health should appear in main article

if (ageGroup=="adult") {
disparity_rec <- recipe(fev1~sex+age+height+occupational_exposure+
    smoker_in_household+bmi+physically_active+healthy_diet+
    has_insurance+education_adults+home_ownership+survey_weights, data=ref_eval) 
 }

if (ageGroup=="youth") {
  #TODO had to remove occupational exposure and healthy diet for us to have any rows left for complete case analysis. Need to think about how to handle this. 
disparity_rec <- recipe(fev1~sex+age+height+
    smoker_in_household+bmi+physically_active+
    has_insurance+maternal_smoke+now_attending_school+home_ownership+survey_weights, data=ref_eval) 
 }

summary(disparity_rec)

std_rec <- disparity_rec %>%
  step_dummy(all_nominal_predictors()) %>%
  step_center(all_numeric_predictors()) %>%
  step_scale(all_numeric_predictors()) 

trained_rec <- prep(std_rec, training=ref_eval)
  
df_train <- bake(trained_rec, new_data = ref_eval)  

  
lr_mod <- linear_reg()

wflow <- 
  workflow() %>% 
  add_model(lr_mod) %>% 
  add_recipe(std_rec) %>%
  add_case_weights(survey_weights)

lm_fit <- 
  wflow %>% 
  fit(data = ref_eval)

res <- 
  tidy(lm_fit) %>%
  arrange(-abs(estimate))

return(res)
}

 compareEffectSizes("adult")
 compareEffectSizes("youth")
```

Now let's look at ranking univariate associations:

```{r, eval=F}

eval_var_importance <- function(vars_for_rec, ageGroup) {
  if (!(ageGroup %in% c("adult", "youth", "all_ages"))) stop("Invalid age group")
  data <- create_ref_for_eval(ageGroup)
  
  disparity_rec <- recipe(formula(paste("fev1 ~ sex + age + height + survey_weights + ", paste(vars_for_rec, collapse = "+"))), 
                      data = data)  
    
  #print(summary(disparity_rec))

  std_rec <- disparity_rec %>%
    step_dummy(all_nominal_predictors()) %>%
    step_center(all_numeric_predictors()) %>%
    step_scale(all_numeric_predictors()) 

  trained_rec <- prep(std_rec, training = data)

  df_train <- bake(trained_rec, new_data = data)  
  wflow <- 
    workflow() %>% 
    add_model(linear_reg()) %>% 
    add_recipe(std_rec) %>%
    add_case_weights(survey_weights)

  fit_obj <- 
    wflow %>% 
    fit(data = data)

  res <- 
    tidy(fit_obj) %>%
    arrange(-abs(estimate))
  return(res)
}

# adult_vars <- c("occupational_exposure","smoker_in_household","bmi",
#                 "physically_active","healthy_diet","has_insurance","education_adults", "home_ownership")
# 
# youth_vars <- c("occupational_exposure", "smoker_in_household","bmi","physically_active", "has_insurance","maternal_smoke","now_attending_school", "home_ownership")

all_ages_vars <- c("occupational_exposure","smoker_in_household","bmi",
                "physically_active","healthy_diet","has_insurance","education", "home_ownership", "maternal_smoke")

map_dfr(all_ages_vars, 
        ~eval_var_importance(.x, "all_ages"),
        .id = "variable") %>% 
  filter(!(term %in% c("(Intercept)", "height", "age", "sex_X2"))) %>%
  arrange(-abs(estimate))

# 
# map_dfr(adult_vars, 
#         ~eval_var_importance(.x, "adult"),
#         .id = "variable") %>% 
#   filter(!(term %in% c("(Intercept)", "height", "age", "sex_X2"))) %>%
#   arrange(-abs(estimate))
# 
# map_dfr(youth_vars, 
#         ~eval_var_importance(.x, "youth"),
#         .id = "variable") %>% 
#   filter(!(term %in% c("(Intercept)", "height", "age", "sex_X2"))) %>%
#   arrange(-abs(estimate))


```

### Alternative Order of Reference Values

```{r, , eval=F}
createCohortAlt <- function (ageGroup,sex='all') {
  if (!(ageGroup %in% c("adult", "youth"))) 
    stop("Invalid age group")
  if (!(sex %in% c("all", "male", "female"))) 
    stop("Invalid sex")
  

  nhanes <- readRDS("nhanes_2007_2012.rds") 
  
  stopifnot((nhanes %>% count()) == 30442) # Ensure we have the correct n
  stopifnot((nhanes %>% filter(race %in% c(3,4)) %>% count()) == 18359) 
  stopifnot((nhanes %>% drop_na(fev1_pre, fvc_pre)  %>% count()) == 20050) 
  
  if (sex=='female') {
    warning('only females are included.')
    nhanes <- nhanes %>% filter(sex==2)
  }
  
  if (sex=='male') {
    warning('only males are included.')
    nhanes <- nhanes %>% filter(sex==1)
  }

  nhanes <- nhanes %>%
    mutate(fev1 = fev1_pre/1000,
           fvc  = fvc_pre/1000) %>%
    drop_na(fev1, fvc) %>%
    filter(spiro_status_pre == 1) %>%
    filter(fev1_quality_pre == "A" | fev1_quality_pre == "B") %>%
    filter(fvc_quality_pre  == "A" | fvc_quality_pre  == "B") 
  
  message(paste0("NHANES N (excluding missing or low quality spiro: ", 
                 (nhanes %>% count())))
  
  nhanes_bw <- nhanes %>%
        filter(race %in% c(3,4))

  message(paste0("NHANES Black and White N (excluding missing or low quality spiro: ", 
                 (nhanes_bw %>% count())))
  
if (ageGroup=="adult") {
nhanes_bw <- nhanes_bw %>%
  filter(age>=20)

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}
  
if (ageGroup=="youth") {
nhanes_bw <- nhanes_bw %>%
  filter(age<20)

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}

ref0 <- nhanes_bw

ref0 %>%
  group_by(race) %>%
  count()

ref1 <- ref0 %>%
  filter ((is.na(current_smoke) | (current_smoke == "3")) &
         (is.na(ever_100_smoke) | (ever_100_smoke != "1")) &
         (is.na(last_5_days_cigarettes) |  (last_5_days_cigarettes != "1")) &
         (is.na(last_5_days_pipes) | (last_5_days_pipes != "1")) &
         (is.na(last_5_days_cigars) | (last_5_days_cigars != "1")) &
         (is.na(ever_asthma) | (ever_asthma !="1")) &
         (is.na(ever_bronchitis) | (ever_bronchitis != "1")) &
         (is.na(ever_emphysema) | (ever_emphysema != "1")) &
         (is.na(cough_3_month) | (cough_3_month!=1)) & 
         (is.na(phlegm_3_month) | (phlegm_3_month!=1)) & 
         (is.na(wheezing_past_yr) | (wheezing_past_yr!=1)) & 
         (is.na(dry_cough_night_past_yr) | (dry_cough_night_past_yr!=1))) %>%
  mutate(ref="reference")

ref2 <- ref1 %>%  
      filter((is.na(smoker_in_household) | (smoker_in_household != "1"))) %>%
  mutate(ref="no second-hand smoke")


ref3 <- ref2 %>%
      filter((is.na(bmi) | (bmi<=30))) %>%
  mutate(ref="not obese")

ref4 <- ref3 %>%
      filter((is.na(vigorous_work) | (vigorous_work==1)) | 
         (is.na(vigorous_recreational)   | (vigorous_recreational==1)) | 
         (is.na(moderate_work)   | (moderate_work==1)) | 
         (is.na(moderate_recreational)   | (moderate_recreational==1))) %>%
  mutate(ref="active")

ref5 <- ref4 %>%
      filter((is.na(maternal_smoke) | (maternal_smoke!=1))) %>%
  mutate(ref="no maternal smoke") #TODO Maternal smoke not available for those over 15 years
  
ref6 <- ref4 %>%
     filter((is.na(has_insurance) | 
               (has_insurance==1))) %>%
  mutate(ref="insured")

ref7 <- ref6 %>%
    filter(is.na(home_ownership) | (home_ownership==1)) %>%
  mutate(ref="home owner")


ref8 <- ref7 %>%
     filter((is.na(healthy_diet) | 
               (healthy_diet==1) | 
               (healthy_diet==2) | 
               (healthy_diet==3))) %>%
  mutate(ref="healthy diet")

ref9 <- ref8 %>%
    filter((is.na(mineral_dusts) | (mineral_dusts!=1)) & 
         (is.na(organic_dusts)   | (organic_dusts!=1)) & 
         (is.na(exhaust_fumes)   | (exhaust_fumes!=1)) & 
         (is.na(other_fumes)     | (other_fumes!=1))) %>%
  mutate(ref="job unexposed")

if (ageGroup=="adult") {
  ref10 <- ref9 %>%
    filter(is.na(education_adults) | (education_adults %in% c(4,5))) %>%
  mutate(ref="educated")
}

if (ageGroup=="youth") {
  ref10 <- ref9 %>%
    filter(is.na(now_attending_school) | (now_attending_school != 3)) %>%
  mutate(ref="educated")
}
refs <- list(ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10)

return(refs)
}

plot_racial_gap_change(createCohortAlt("adult"), createCohortAlt("youth"))

# plot_racial_gap_change_single_sex(createCohortAlt("adult", sex="male"), createCohortAlt("youth", sex="male"))

```

#### Alternate Order 2

```{r, eval=F}
createCohortAlt2 <- function (ageGroup,sex='all') {
  if (!(ageGroup %in% c("adult", "youth"))) 
    stop("Invalid age group")
  if (!(sex %in% c("all", "male", "female"))) 
    stop("Invalid sex")
  

  nhanes <- readRDS("nhanes_2007_2012.rds") 
  
  stopifnot((nhanes %>% count()) == 30442) # Ensure we have the correct n
  stopifnot((nhanes %>% filter(race %in% c(3,4)) %>% count()) == 18359) 
  stopifnot((nhanes %>% drop_na(fev1_pre, fvc_pre)  %>% count()) == 20050) 
  
  if (sex=='female') {
    warning('only females are included.')
    nhanes <- nhanes %>% filter(sex==2)
  }
  
  if (sex=='male') {
    warning('only males are included.')
    nhanes <- nhanes %>% filter(sex==1)
  }

  nhanes <- nhanes %>%
    mutate(fev1 = fev1_pre/1000,
           fvc  = fvc_pre/1000) %>%
    drop_na(fev1, fvc) %>%
    filter(spiro_status_pre == 1) %>%
    filter(fev1_quality_pre == "A" | fev1_quality_pre == "B") %>%
    filter(fvc_quality_pre  == "A" | fvc_quality_pre  == "B") 
  
  message(paste0("NHANES N (excluding missing or low quality spiro: ", 
                 (nhanes %>% count())))
  
  nhanes_bw <- nhanes %>%
        filter(race %in% c(3,4))

  message(paste0("NHANES Black and White N (excluding missing or low quality spiro: ", 
                 (nhanes_bw %>% count())))
  
if (ageGroup=="adult") {
nhanes_bw <- nhanes_bw %>%
  filter(age>=20)

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}
  
if (ageGroup=="youth") {
nhanes_bw <- nhanes_bw %>%
  filter(age<20)

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}

ref0 <- nhanes_bw

ref0 %>%
  group_by(race) %>%
  count()

ref1 <- ref0 %>%
  filter ((is.na(current_smoke) | (current_smoke == "3")) &
         (is.na(ever_100_smoke) | (ever_100_smoke != "1")) &
         (is.na(last_5_days_cigarettes) |  (last_5_days_cigarettes != "1")) &
         (is.na(last_5_days_pipes) | (last_5_days_pipes != "1")) &
         (is.na(last_5_days_cigars) | (last_5_days_cigars != "1")) &
         (is.na(ever_asthma) | (ever_asthma !="1")) &
         (is.na(ever_bronchitis) | (ever_bronchitis != "1")) &
         (is.na(ever_emphysema) | (ever_emphysema != "1")) &
         (is.na(cough_3_month) | (cough_3_month!=1)) & 
         (is.na(phlegm_3_month) | (phlegm_3_month!=1)) & 
         (is.na(wheezing_past_yr) | (wheezing_past_yr!=1)) & 
         (is.na(dry_cough_night_past_yr) | (dry_cough_night_past_yr!=1))) %>%
  mutate(ref="reference")

ref2 <- ref1 %>%
    filter((is.na(mineral_dusts) | (mineral_dusts!=1)) & 
         (is.na(organic_dusts)   | (organic_dusts!=1)) & 
         (is.na(exhaust_fumes)   | (exhaust_fumes!=1)) & 
         (is.na(other_fumes)     | (other_fumes!=1))) %>%
  mutate(ref="job unexposed")

ref3 <- ref2 %>%
    filter(is.na(home_ownership) | (home_ownership==1)) %>%
  mutate(ref="home owner")

ref4 <- ref3 %>%
      filter((is.na(bmi) | (bmi<=30))) %>%
  mutate(ref="not obese")

if (ageGroup=="adult") {
  ref5 <- ref4 %>%
    filter(is.na(education_adults) | (education_adults %in% c(4,5))) %>%
  mutate(ref="educated")
}

if (ageGroup=="youth") {
  ref5 <- ref4 %>%
    filter(is.na(now_attending_school) | (now_attending_school != 3)) %>%
  mutate(ref="educated")
}

ref6 <- ref5 %>%
     filter((is.na(has_insurance) | 
               (has_insurance==1))) %>%
  mutate(ref="insured")

ref7 <- ref6 %>%
     filter((is.na(healthy_diet) | 
               (healthy_diet==1) | 
               (healthy_diet==2) | 
               (healthy_diet==3))) %>%
  mutate(ref="healthy diet")

ref8 <- ref7 %>%  
      filter((is.na(smoker_in_household) | (smoker_in_household != "1"))) %>%
  mutate(ref="no 2nd hand smoke")


ref9 <- ref8 %>%
      filter((is.na(maternal_smoke) | (maternal_smoke!=1))) %>%
  mutate(ref="no maternal smoke") #TODO Maternal smoke not available for those over 15 years

ref10 <- ref9 %>%
      filter((is.na(vigorous_work) | (vigorous_work==1)) | 
         (is.na(vigorous_recreational)   | (vigorous_recreational==1)) | 
         (is.na(moderate_work)   | (moderate_work==1)) | 
         (is.na(moderate_recreational)   | (moderate_recreational==1))) %>%
  mutate(ref="active")


refs <- list(ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10)

return(refs)
}

plot_racial_gap_change(createCohortAlt2("adult"), createCohortAlt("youth"))
```

We tried different orders of exclusion and it seems that in adults we see a decline once we have excluded based on three factors: BMI, home ownership, and occupational exposure.

### Non-Cumulative Exclusion

Excluding one by one, instead of nested, to see which variable matters most. It's kind of like variable selection and we want to get the most parsimonious combination that describes the most reduction in racial gap. Must be a smarter way to do this.

```{r}

createCohort1by1 <- function (ageGroup,sex='all') {
  if (!(ageGroup %in% c("adult", "youth"))) 
    stop("Invalid age group")
  if (!(sex %in% c("all", "male", "female"))) 
    stop("Invalid sex")
  

  nhanes <- readRDS("nhanes_2007_2012.rds") 
  
  stopifnot((nhanes %>% count()) == 30442) # Ensure we have the correct n
  stopifnot((nhanes %>% filter(race %in% c(3,4)) %>% count()) == 18359) 
  stopifnot((nhanes %>% drop_na(fev1_pre, fvc_pre)  %>% count()) == 20050) 
  
  if (sex=='female') {
    warning('only females are included.')
    nhanes <- nhanes %>% filter(sex==2)
  }
  
  if (sex=='male') {
    warning('only males are included.')
    nhanes <- nhanes %>% filter(sex==1)
  }

  nhanes <- nhanes %>%
    mutate(fev1 = fev1_pre/1000,
           fvc  = fvc_pre/1000) %>%
    drop_na(fev1, fvc) %>%
    filter(spiro_status_pre == 1) %>%
    filter(fev1_quality_pre == "A" | fev1_quality_pre == "B") %>%
    filter(fvc_quality_pre  == "A" | fvc_quality_pre  == "B") 
  
  message(paste0("NHANES N (excluding missing or low quality spiro: ", 
                 (nhanes %>% count())))
  
  nhanes_bw <- nhanes %>%
        filter(race %in% c(3,4))

  message(paste0("NHANES Black and White N (excluding missing or low quality spiro: ", 
                 (nhanes_bw %>% count())))
  
if (ageGroup=="adult") {
nhanes_bw <- nhanes_bw %>%
  filter(age>=20)

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}
  
if (ageGroup=="youth") {
nhanes_bw <- nhanes_bw %>%
  filter(age<20)

  message(paste0(ageGroup, "-NHANES : ", 
                 (nhanes_bw %>% count())))
}

ref0 <- nhanes_bw

ref0 %>%
  group_by(race) %>%
  count()

ref1 <- ref0 %>%
  filter ((is.na(current_smoke) | (current_smoke == "3")) &
         (is.na(ever_100_smoke) | (ever_100_smoke != "1")) &
         (is.na(last_5_days_cigarettes) |  (last_5_days_cigarettes != "1")) &
         (is.na(last_5_days_pipes) | (last_5_days_pipes != "1")) &
         (is.na(last_5_days_cigars) | (last_5_days_cigars != "1")) &
         (is.na(ever_asthma) | (ever_asthma !="1")) &
         (is.na(ever_bronchitis) | (ever_bronchitis != "1")) &
         (is.na(ever_emphysema) | (ever_emphysema != "1")) &
         (is.na(cough_3_month) | (cough_3_month!=1)) & 
         (is.na(phlegm_3_month) | (phlegm_3_month!=1)) & 
         (is.na(wheezing_past_yr) | (wheezing_past_yr!=1)) & 
         (is.na(dry_cough_night_past_yr) | (dry_cough_night_past_yr!=1))) %>%
  mutate(ref="reference")

ref2 <- ref0 %>%
    filter((is.na(mineral_dusts) | (mineral_dusts!=1)) & 
         (is.na(organic_dusts)   | (organic_dusts!=1)) & 
         (is.na(exhaust_fumes)   | (exhaust_fumes!=1)) & 
         (is.na(other_fumes)     | (other_fumes!=1))) %>%
  mutate(ref="job unexposed")

ref3 <- ref0 %>%
    filter(is.na(home_ownership) | (home_ownership==1)) %>%
  mutate(ref="home owner")

ref4 <- ref0 %>%
      filter((is.na(bmi) | (bmi<=30))) %>%
  mutate(ref="not obese")

if (ageGroup=="adult") {
  ref5 <- ref0 %>%
    filter(is.na(education_adults) | (education_adults %in% c(4,5))) %>%
  mutate(ref="educated")
}

if (ageGroup=="youth") {
  ref5 <- ref0 %>%
    filter(is.na(now_attending_school) | (now_attending_school != 3)) %>%
  mutate(ref="educated")
}

ref6 <- ref0 %>%
     filter((is.na(has_insurance) | 
               (has_insurance==1))) %>%
  mutate(ref="insured")

ref7 <- ref0 %>%
     filter((is.na(healthy_diet) | 
               (healthy_diet==1) | 
               (healthy_diet==2) | 
               (healthy_diet==3))) %>%
  mutate(ref="healthy diet")

ref8 <- ref0 %>%  
      filter((is.na(smoker_in_household) | (smoker_in_household != "1"))) %>%
  mutate(ref="no 2nd hand smoke")

ref9 <- ref0 %>%
      filter((is.na(maternal_smoke) | (maternal_smoke!=1))) %>%
  mutate(ref="no maternal smoke") #TODO Maternal smoke not available for those over 15 years
  
ref10 <- ref0 %>%
      filter((is.na(vigorous_work) | (vigorous_work==1)) | 
         (is.na(vigorous_recreational)   | (vigorous_recreational==1)) | 
         (is.na(moderate_work)   | (moderate_work==1)) | 
         (is.na(moderate_recreational)   | (moderate_recreational==1))) %>%
  mutate(ref="active")

refs <- list(ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10)

return(refs)
}

plot_racial_gap_change(createCohort1by1("adult"), createCohort1by1("youth"))
```


## Reference Equations

```{r, warning=FALSE, message=FALSE, eval=F}
#| label: fig-refeq1
#| fig-cap: ref eq1
 
plot_racial_gap_change(refs_adult, refs_youth, metric1="fev1", metric2="predicted_fev1_gli2012")
plot_racial_gap_change(refs_adult, refs_youth, metric1="fev1", metric2="predicted_fev1_gli_global")

```


### Effect of Home Ownership

```{r, eval=F}

refs_adult_homeOwnershipOnly <- createCohort("adult", homeOwnershipOnly=TRUE)
refs_youth_homeOwnershipOnly <- createCohort("youth", homeOwnershipOnly=TRUE)

plot_racial_gap_change(refs_adult_homeOwnershipOnly, refs_youth_homeOwnershipOnly)
```




### Differential Missingness by Race

Also, good to explore the relative difference in missingness. And we should probably do multiple imputation.

```{r, warning=FALSE, eval=F}
missingnessByRace <- function(df){
df <- df %>% 
    select(mineral_dusts, organic_dusts, exhaust_fumes, other_fumes, race_text_nhanes,
           home_ownership, bmi, education_adults, now_attending_school, has_insurance, healthy_diet, smoker_in_household, vigorous_work,  vigorous_recreational, moderate_work, moderate_recreational, ever_100_smoke, ever_asthma, ever_bronchitis, ever_emphysema, cough_3_month, phlegm_3_month, wheezing_past_yr, dry_cough_night_past_yr ) 
  vis_miss(df, facet=race_text_nhanes)
}

```

#### Adults

```{r, warning=FALSE, eval=F}

lapply(refs_adult, missingnessByRace)
```

#### Youth

```{r, warning=FALSE, eval=F}

lapply(refs_youth, missingnessByRace)
```
#### Gap between White people and non-US born Black people

```{r, warning=FALSE, eval=F}
refs_adult_OtherCountries_Black <- createCohort("adult", BirthCountry="Other countries")
#message("Adult counts:")
#message(map_df(refs_adult, count))

refs_youth_OtherCountries_Black <- createCohort("youth", BirthCountry="Other countries")
#message("Youth counts:")
#message(map_df(refs_youth, count))

plot_racial_gap_change(refs_adult_OtherCountries_Black, refs_youth_OtherCountries_Black)
```

#### Adults

```{r, warning=FALSE, eval=F}
disparityDistBirthCountry <- function(data, var) {
    data %>%
    group_by(race_text_nhanes, sex, birth_country) %>%
    drop_na(.data[[var]]) %>%
    summarise(value = sum(.data[[var]] == 1, na.rm = TRUE)/n()*100) %>%
    ungroup() %>%
    ggplot() +
    geom_col(aes(x = value, y = race_text_nhanes, fill = birth_country), position = "dodge") +
    theme_few()
}

purrr::map(adults_eval_variables, disparityDistBirthCountry, data = adults_eval)

```

#### Youth

```{r, warning=FALSE, eval=F}
purrr::map(youth_eval_variables, disparityDistBirthCountry, data = youth_eval)

```

### Visualizing Disparities

Let's look at income disparities:

```{r, warning=FALSE, eval=F}

# compareIncome <- function(race, sex, title) {
#     data <- refs_adult[[1]] %>% filter(race_text_nhanes == race & sex==sex)
#     p_income <- ggplot(data, aes(income_poverty_ratio)) +
#         geom_histogram(aes(y = 100*after_stat(count / sum(count)), weight =MEC6YR), 
#         alpha=0.6, position="identity") + 
#         ylim(0,50) + 
#         ylab("Percentage") + 
#         ggtitle(title) +
#         theme_few() 
#     return(p_income)
# }    
# 
# compareIncome("Non-Hispanic White", 1, "White Males")
# 
# compareIncome("Non-Hispanic Black", 1, "Black Males")
#     

white_males   <- refs_adult[[1]] %>% 
  filter(race_text_nhanes=="Non-Hispanic White" & sex==1)
white_females <- refs_adult[[1]] %>% 
  filter(race_text_nhanes=="Non-Hispanic White" & sex==2)

black_males   <- refs_adult[[1]] %>% 
  filter(race_text_nhanes=="Non-Hispanic Black"& sex==1)
black_females <- refs_adult[[1]] %>% 
  filter(race_text_nhanes=="Non-Hispanic Black"& sex==2)


p_white_males <- ggplot(white_males, aes(income_poverty_ratio)) +
    geom_histogram(aes(y = 100*after_stat(count / sum(count)), weight =MEC6YR), alpha=0.6, position="identity") + ylim(0,50) + ylab("Percentage") + ggtitle("White Males") +
  theme_few() 

p_white_females <- ggplot(white_females, aes(income_poverty_ratio)) +
    geom_histogram(aes(y = 100*after_stat(count / sum(count)), weight =MEC6YR), alpha=0.6, position="identity") + ylim(0,50) + ylab("Percentage") + ggtitle("White Females") +
  theme_few() 

p_black_males <- ggplot(black_males, aes(income_poverty_ratio)) +
    geom_histogram(aes(y = 100*after_stat(count / sum(count)), weight =MEC6YR), alpha=0.6, position="identity")  + ylim(0,50) + ylab("Percentage") + ggtitle("Black Males") +
  theme_few()

p_black_females <- ggplot(black_females, aes(income_poverty_ratio)) +
    geom_histogram(aes(y = 100*after_stat(count / sum(count)), weight =MEC6YR), alpha=0.6, position="identity")  + ylim(0,50) + ylab("Percentage") + ggtitle("Black Females") +
  theme_few()

(p_black_males + p_black_females)/(p_white_males+p_white_females) + plot_layout(axes = "collect")

refs_adult[[1]] %>% 
  group_by(race_text_nhanes, sex) %>%   
  summarise(total_people = n(),
            income_five_times_poverty = sum(income_poverty_ratio == 5, na.rm = TRUE),
            proportion = income_five_times_poverty / total_people)

refs_adult[[1]] %>% 
  group_by(race_text_nhanes, sex, birth_country) %>%   
  summarise(total_people = n(),
            income_five_times_poverty = sum(income_poverty_ratio == 5, na.rm = TRUE),
            proportion = income_five_times_poverty / total_people)
```

Now let's look at education in adults, and occupational exposures.

More efficient code:

```{r, warning=FALSE, eval=F}
disparityDist <- function(data, var) {
    data %>%
    group_by(race_text_nhanes, sex) %>%
    drop_na(.data[[var]]) %>%
    summarise(value = sum(.data[[var]] == 1, na.rm = TRUE)/n()*100) %>%
    ungroup() %>%
    ggplot() +
    geom_col(aes(x = value, y = race_text_nhanes, fill = sex), position = "dodge") +
    theme_few()
}

adults_eval <- create_ref_for_eval("adult", binaryRace = FALSE)

adults_eval_variables <- c("education_adults", "occupational_exposure", "smoker_in_household", 
                           "physically_active", "healthy_diet", "general_health", "has_insurance")

purrr::map(adults_eval_variables, disparityDist, data = adults_eval)


```

and for youth:

```{r, warning=FALSE, eval=F}

youth_eval <- create_ref_for_eval("youth", binaryRace = FALSE)
youth_eval_variables <- c("now_attending_school", "occupational_exposure", "smoker_in_household", 
                          "maternal_smoke", "physically_active", "healthy_diet", "general_health", "has_insurance")

purrr::map(youth_eval_variables, disparityDist, data = youth_eval)

```

### Emotional Support

Social support questionnaire is only available in 2007-2008, but even in that cycle more than half of the data is missing and remainder has a huge class imbalance, so it'd be hard to evaluate the effect of emotional support on racial gap in lung function.


## Lung Function vs. Age

### Adults

```{r, warning=FALSE, eval=F}

fev1_age_race <- function(df) {
  ggplot(df, aes(y=fev1, x=age, col=race_text_nhanes)) +
    geom_point(size=0.1, alpha=0.4) +
    geom_smooth() +
    theme_few() +
    facet_wrap(~sex)
}

fev1_height_race <- function(df) {
  ggplot(df, aes(y=fev1, x=height, col=race_text_nhanes)) +
    geom_point(size=0.1) +
    geom_smooth() +
    theme_few() +
    facet_wrap(~sex)
}

lapply(refs_adult, fev1_age_race)

```

### Youth

```{r, warning=FALSE, eval=F}

lapply(refs_youth, fev1_age_race)

```

## Lung Function vs. Height

### Adults

```{r, warning=FALSE, eval=F}

lapply(refs_adult, fev1_height_race)

```

### Youth

```{r, warning=FALSE, eval=F}

lapply(refs_youth, fev1_height_race)

```
-->
````
